// Generated by Haxe 4.3.7
#include <hxcpp.h>

#ifndef INCLUDED_custom_haxe__Int128_Int128_Impl_
#include <custom/haxe/_Int128/Int128_Impl_.h>
#endif
#ifndef INCLUDED_custom_haxe__Int128____Int128_Impl_
#include <custom/haxe/_Int128/___Int128_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_5547bd0d2964f3e6_522_get_high,"custom.haxe._Int128.___Int128_Impl_","get_high",0x77cb1ec4,"custom.haxe._Int128.___Int128_Impl_.get_high","custom/haxe/Int128.hx",522,0x2147ec6b)
HX_LOCAL_STACK_FRAME(_hx_pos_5547bd0d2964f3e6_526_set_high,"custom.haxe._Int128.___Int128_Impl_","set_high",0x26287838,"custom.haxe._Int128.___Int128_Impl_.set_high","custom/haxe/Int128.hx",526,0x2147ec6b)
HX_LOCAL_STACK_FRAME(_hx_pos_5547bd0d2964f3e6_530_get_low,"custom.haxe._Int128.___Int128_Impl_","get_low",0x86dcef72,"custom.haxe._Int128.___Int128_Impl_.get_low","custom/haxe/Int128.hx",530,0x2147ec6b)
HX_LOCAL_STACK_FRAME(_hx_pos_5547bd0d2964f3e6_534_set_low,"custom.haxe._Int128.___Int128_Impl_","set_low",0x79de807e,"custom.haxe._Int128.___Int128_Impl_.set_low","custom/haxe/Int128.hx",534,0x2147ec6b)
HX_LOCAL_STACK_FRAME(_hx_pos_5547bd0d2964f3e6_537__new,"custom.haxe._Int128.___Int128_Impl_","_new",0x439620ba,"custom.haxe._Int128.___Int128_Impl_._new","custom/haxe/Int128.hx",537,0x2147ec6b)
HX_LOCAL_STACK_FRAME(_hx_pos_5547bd0d2964f3e6_547_toString,"custom.haxe._Int128.___Int128_Impl_","toString",0xeb70fc85,"custom.haxe._Int128.___Int128_Impl_.toString","custom/haxe/Int128.hx",547,0x2147ec6b)
namespace custom{
namespace haxe{
namespace _Int128{

void ___Int128_Impl__obj::__construct() { }

Dynamic ___Int128_Impl__obj::__CreateEmpty() { return new ___Int128_Impl__obj; }

void *___Int128_Impl__obj::_hx_vtable = 0;

Dynamic ___Int128_Impl__obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< ___Int128_Impl__obj > _hx_result = new ___Int128_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool ___Int128_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x24b6021b;
}

::cpp::Int64 ___Int128_Impl__obj::get_high(::Array< ::cpp::Int64 > this1){
            	HX_STACKFRAME(&_hx_pos_5547bd0d2964f3e6_522_get_high)
HXDLIN( 522)		return ( (::cpp::Int64)(_hx_array_unsafe_get(this1,0)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(___Int128_Impl__obj,get_high,return )

::cpp::Int64 ___Int128_Impl__obj::set_high(::Array< ::cpp::Int64 > this1,::cpp::Int64 value){
            	HX_STACKFRAME(&_hx_pos_5547bd0d2964f3e6_526_set_high)
HXDLIN( 526)		return ( (::cpp::Int64)(this1->__unsafe_set(0,value)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(___Int128_Impl__obj,set_high,return )

::cpp::Int64 ___Int128_Impl__obj::get_low(::Array< ::cpp::Int64 > this1){
            	HX_STACKFRAME(&_hx_pos_5547bd0d2964f3e6_530_get_low)
HXDLIN( 530)		return ( (::cpp::Int64)(_hx_array_unsafe_get(this1,1)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(___Int128_Impl__obj,get_low,return )

::cpp::Int64 ___Int128_Impl__obj::set_low(::Array< ::cpp::Int64 > this1,::cpp::Int64 value){
            	HX_STACKFRAME(&_hx_pos_5547bd0d2964f3e6_534_set_low)
HXDLIN( 534)		return ( (::cpp::Int64)(this1->__unsafe_set(1,value)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(___Int128_Impl__obj,set_low,return )

::Array< ::cpp::Int64 > ___Int128_Impl__obj::_new(::cpp::Int64 high,::cpp::Int64 low){
            	HX_STACKFRAME(&_hx_pos_5547bd0d2964f3e6_537__new)
HXDLIN( 537)		return ::Array_obj< ::cpp::Int64 >::__new(2)->init(0,high)->init(1,low);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(___Int128_Impl__obj,_new,return )

::String ___Int128_Impl__obj::toString(::Array< ::cpp::Int64 > this1){
            	HX_STACKFRAME(&_hx_pos_5547bd0d2964f3e6_547_toString)
HXDLIN( 547)		return ::custom::haxe::_Int128::Int128_Impl__obj::toStr(this1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(___Int128_Impl__obj,toString,return )


___Int128_Impl__obj::___Int128_Impl__obj()
{
}

bool ___Int128_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"_new") ) { outValue = _new_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"get_low") ) { outValue = get_low_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_low") ) { outValue = set_low_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"get_high") ) { outValue = get_high_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_high") ) { outValue = set_high_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toString") ) { outValue = toString_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *___Int128_Impl__obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *___Int128_Impl__obj_sStaticStorageInfo = 0;
#endif

::hx::Class ___Int128_Impl__obj::__mClass;

static ::String ___Int128_Impl__obj_sStaticFields[] = {
	HX_("get_high",eb,f2,c8,c4),
	HX_("set_high",5f,4c,26,73),
	HX_("get_low",2b,1d,c7,26),
	HX_("set_low",37,ae,c8,19),
	HX_("_new",61,15,1f,3f),
	HX_("toString",ac,d0,6e,38),
	::String(null())
};

void ___Int128_Impl__obj::__register()
{
	___Int128_Impl__obj _hx_dummy;
	___Int128_Impl__obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("custom.haxe._Int128.___Int128_Impl_",b5,13,8b,06);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &___Int128_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(___Int128_Impl__obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< ___Int128_Impl__obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ___Int128_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ___Int128_Impl__obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace custom
} // end namespace haxe
} // end namespace _Int128
