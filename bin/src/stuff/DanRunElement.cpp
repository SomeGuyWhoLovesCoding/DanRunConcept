// Generated by Haxe 4.3.7
#include <hxcpp.h>

#ifndef INCLUDED_stuff_DanRunElement
#include <stuff/DanRunElement.h>
#endif
#ifndef INCLUDED_stuff_Element
#include <stuff/Element.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_d4f3f2e0b0fd592d_5_new,"stuff.DanRunElement","new",0xd94c723a,"stuff.DanRunElement.new","stuff/DanRunElement.hx",5,0x41580477)
namespace stuff{

void DanRunElement_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_d4f3f2e0b0fd592d_5_new)
HXDLIN(   5)		super::__construct();
            	}

Dynamic DanRunElement_obj::__CreateEmpty() { return new DanRunElement_obj; }

void *DanRunElement_obj::_hx_vtable = 0;

Dynamic DanRunElement_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< DanRunElement_obj > _hx_result = new DanRunElement_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool DanRunElement_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x09bcbbce) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x09bcbbce;
	} else {
		return inClassId==(int)0x24860ab8;
	}
}


DanRunElement_obj::DanRunElement_obj()
{
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *DanRunElement_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *DanRunElement_obj_sStaticStorageInfo = 0;
#endif

::hx::Class DanRunElement_obj::__mClass;

void DanRunElement_obj::__register()
{
	DanRunElement_obj _hx_dummy;
	DanRunElement_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("stuff.DanRunElement",48,8d,ec,5f);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< DanRunElement_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = DanRunElement_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = DanRunElement_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace stuff
