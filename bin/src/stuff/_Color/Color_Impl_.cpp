// Generated by Haxe 4.3.7
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_stuff__Color_Color_Impl_
#include <stuff/_Color/Color_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_63_get_r,"stuff._Color.Color_Impl_","get_r",0x6d0ecf0e,"stuff._Color.Color_Impl_.get_r","stuff/Color.hx",63,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_64_get_g,"stuff._Color.Color_Impl_","get_g",0x6d0ecf03,"stuff._Color.Color_Impl_.get_g","stuff/Color.hx",64,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_65_get_b,"stuff._Color.Color_Impl_","get_b",0x6d0ecefe,"stuff._Color.Color_Impl_.get_b","stuff/Color.hx",65,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_66_get_a,"stuff._Color.Color_Impl_","get_a",0x6d0ecefd,"stuff._Color.Color_Impl_.get_a","stuff/Color.hx",66,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_68_get_rgb,"stuff._Color.Color_Impl_","get_rgb",0xe9ab88a9,"stuff._Color.Color_Impl_.get_rgb","stuff/Color.hx",68,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_69_get_argb,"stuff._Color.Color_Impl_","get_argb",0x8137c830,"stuff._Color.Color_Impl_.get_argb","stuff/Color.hx",69,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_71_get_red,"stuff._Color.Color_Impl_","get_red",0xe9ab86ed,"stuff._Color.Color_Impl_.get_red","stuff/Color.hx",71,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_72_get_green,"stuff._Color.Color_Impl_","get_green",0x03fd5b5f,"stuff._Color.Color_Impl_.get_green","stuff/Color.hx",72,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_73_get_blue,"stuff._Color.Color_Impl_","get_blue",0x81dc7d7e,"stuff._Color.Color_Impl_.get_blue","stuff/Color.hx",73,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_74_get_alpha,"stuff._Color.Color_Impl_","get_alpha",0x8ba6f3fa,"stuff._Color.Color_Impl_.get_alpha","stuff/Color.hx",74,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_75_get_luminance,"stuff._Color.Color_Impl_","get_luminance",0x61310294,"stuff._Color.Color_Impl_.get_luminance","stuff/Color.hx",75,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_78_get_rF,"stuff._Color.Color_Impl_","get_rF",0xffe65d78,"stuff._Color.Color_Impl_.get_rF","stuff/Color.hx",78,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_79_get_gF,"stuff._Color.Color_Impl_","get_gF",0xffe653e3,"stuff._Color.Color_Impl_.get_gF","stuff/Color.hx",79,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_80_get_bF,"stuff._Color.Color_Impl_","get_bF",0xffe64f88,"stuff._Color.Color_Impl_.get_bF","stuff/Color.hx",80,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_81_get_aF,"stuff._Color.Color_Impl_","get_aF",0xffe64ea9,"stuff._Color.Color_Impl_.get_aF","stuff/Color.hx",81,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_83_get_redF,"stuff._Color.Color_Impl_","get_redF",0x8c6a88b9,"stuff._Color.Color_Impl_.get_redF","stuff/Color.hx",83,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_84_get_greenF,"stuff._Color.Color_Impl_","get_greenF",0x79b29807,"stuff._Color.Color_Impl_.get_greenF","stuff/Color.hx",84,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_85_get_blueF,"stuff._Color.Color_Impl_","get_blueF",0x1f115108,"stuff._Color.Color_Impl_.get_blueF","stuff/Color.hx",85,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_86_get_alphaF,"stuff._Color.Color_Impl_","get_alphaF",0xa66e870c,"stuff._Color.Color_Impl_.get_alphaF","stuff/Color.hx",86,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_87_get_luminanceF,"stuff._Color.Color_Impl_","get_luminanceF",0xa9b13f32,"stuff._Color.Color_Impl_.get_luminanceF","stuff/Color.hx",87,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_90_set_r,"stuff._Color.Color_Impl_","set_r",0x55ddc51a,"stuff._Color.Color_Impl_.set_r","stuff/Color.hx",90,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_91_set_g,"stuff._Color.Color_Impl_","set_g",0x55ddc50f,"stuff._Color.Color_Impl_.set_g","stuff/Color.hx",91,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_92_set_b,"stuff._Color.Color_Impl_","set_b",0x55ddc50a,"stuff._Color.Color_Impl_.set_b","stuff/Color.hx",92,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_93_set_a,"stuff._Color.Color_Impl_","set_a",0x55ddc509,"stuff._Color.Color_Impl_.set_a","stuff/Color.hx",93,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_95_set_rgb,"stuff._Color.Color_Impl_","set_rgb",0xdcad19b5,"stuff._Color.Color_Impl_.set_rgb","stuff/Color.hx",95,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_96_set_argb,"stuff._Color.Color_Impl_","set_argb",0x2f9521a4,"stuff._Color.Color_Impl_.set_argb","stuff/Color.hx",96,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_98_set_red,"stuff._Color.Color_Impl_","set_red",0xdcad17f9,"stuff._Color.Color_Impl_.set_red","stuff/Color.hx",98,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_99_set_green,"stuff._Color.Color_Impl_","set_green",0xe74e476b,"stuff._Color.Color_Impl_.set_green","stuff/Color.hx",99,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_100_set_blue,"stuff._Color.Color_Impl_","set_blue",0x3039d6f2,"stuff._Color.Color_Impl_.set_blue","stuff/Color.hx",100,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_101_set_alpha,"stuff._Color.Color_Impl_","set_alpha",0x6ef7e006,"stuff._Color.Color_Impl_.set_alpha","stuff/Color.hx",101,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_102_set_luminance,"stuff._Color.Color_Impl_","set_luminance",0xa636e4a0,"stuff._Color.Color_Impl_.set_luminance","stuff/Color.hx",102,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_105_set_rF,"stuff._Color.Color_Impl_","set_rF",0xcc2eb1ec,"stuff._Color.Color_Impl_.set_rF","stuff/Color.hx",105,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_106_set_gF,"stuff._Color.Color_Impl_","set_gF",0xcc2ea857,"stuff._Color.Color_Impl_.set_gF","stuff/Color.hx",106,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_107_set_bF,"stuff._Color.Color_Impl_","set_bF",0xcc2ea3fc,"stuff._Color.Color_Impl_.set_bF","stuff/Color.hx",107,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_108_set_aF,"stuff._Color.Color_Impl_","set_aF",0xcc2ea31d,"stuff._Color.Color_Impl_.set_aF","stuff/Color.hx",108,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_110_set_redF,"stuff._Color.Color_Impl_","set_redF",0x3ac7e22d,"stuff._Color.Color_Impl_.set_redF","stuff/Color.hx",110,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_111_set_greenF,"stuff._Color.Color_Impl_","set_greenF",0x7d30367b,"stuff._Color.Color_Impl_.set_greenF","stuff/Color.hx",111,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_112_set_blueF,"stuff._Color.Color_Impl_","set_blueF",0x02623d14,"stuff._Color.Color_Impl_.set_blueF","stuff/Color.hx",112,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_113_set_alphaF,"stuff._Color.Color_Impl_","set_alphaF",0xa9ec2580,"stuff._Color.Color_Impl_.set_alphaF","stuff/Color.hx",113,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_114_set_luminanceF,"stuff._Color.Color_Impl_","set_luminanceF",0xc9d127a6,"stuff._Color.Color_Impl_.set_luminanceF","stuff/Color.hx",114,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_129_setARGB,"stuff._Color.Color_Impl_","setARGB",0xc8c04ef3,"stuff._Color.Color_Impl_.setARGB","stuff/Color.hx",129,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_138_setRGBA,"stuff._Color.Color_Impl_","setRGBA",0xd3f4925b,"stuff._Color.Color_Impl_.setRGBA","stuff/Color.hx",138,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_146_setRGB,"stuff._Color.Color_Impl_","setRGB",0xcc24af26,"stuff._Color.Color_Impl_.setRGB","stuff/Color.hx",146,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_153_setLuminanceAlpha,"stuff._Color.Color_Impl_","setLuminanceAlpha",0xe85fc0cd,"stuff._Color.Color_Impl_.setLuminanceAlpha","stuff/Color.hx",153,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_162_setRed,"stuff._Color.Color_Impl_","setRed",0xcc24c96a,"stuff._Color.Color_Impl_.setRed","stuff/Color.hx",162,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_168_setGreen,"stuff._Color.Color_Impl_","setGreen",0x6929f71c,"stuff._Color.Color_Impl_.setGreen","stuff/Color.hx",168,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_174_setBlue,"stuff._Color.Color_Impl_","setBlue",0xc97d6861,"stuff._Color.Color_Impl_.setBlue","stuff/Color.hx",174,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_180_setAlpha,"stuff._Color.Color_Impl_","setAlpha",0xf0d38fb7,"stuff._Color.Color_Impl_.setAlpha","stuff/Color.hx",180,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_186_setLuminance,"stuff._Color.Color_Impl_","setLuminance",0xbb02c0d1,"stuff._Color.Color_Impl_.setLuminance","stuff/Color.hx",186,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_198_setFloatARGB,"stuff._Color.Color_Impl_","setFloatARGB",0x460fa1c1,"stuff._Color.Color_Impl_.setFloatARGB","stuff/Color.hx",198,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_207_setFloatRGBA,"stuff._Color.Color_Impl_","setFloatRGBA",0x5143e529,"stuff._Color.Color_Impl_.setFloatRGBA","stuff/Color.hx",207,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_215_setFloatRGB,"stuff._Color.Color_Impl_","setFloatRGB",0xd0263018,"stuff._Color.Color_Impl_.setFloatRGB","stuff/Color.hx",215,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_222_setFloatLuminanceAlpha,"stuff._Color.Color_Impl_","setFloatLuminanceAlpha",0xafc3e11b,"stuff._Color.Color_Impl_.setFloatLuminanceAlpha","stuff/Color.hx",222,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_231_setFloatRed,"stuff._Color.Color_Impl_","setFloatRed",0xd0264a5c,"stuff._Color.Color_Impl_.setFloatRed","stuff/Color.hx",231,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_237_setFloatGreen,"stuff._Color.Color_Impl_","setFloatGreen",0x9143188e,"stuff._Color.Color_Impl_.setFloatGreen","stuff/Color.hx",237,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_243_setFloatBlue,"stuff._Color.Color_Impl_","setFloatBlue",0x46ccbb2f,"stuff._Color.Color_Impl_.setFloatBlue","stuff/Color.hx",243,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_249_setFloatAlpha,"stuff._Color.Color_Impl_","setFloatAlpha",0x18ecb129,"stuff._Color.Color_Impl_.setFloatAlpha","stuff/Color.hx",249,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_255_setFloatLuminance,"stuff._Color.Color_Impl_","setFloatLuminance",0x406e8343,"stuff._Color.Color_Impl_.setFloatLuminance","stuff/Color.hx",255,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_271_ARGB,"stuff._Color.Color_Impl_","ARGB",0x735e4b27,"stuff._Color.Color_Impl_.ARGB","stuff/Color.hx",271,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_280_RGBA,"stuff._Color.Color_Impl_","RGBA",0x7e928e8f,"stuff._Color.Color_Impl_.RGBA","stuff/Color.hx",280,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_288_RGB,"stuff._Color.Color_Impl_","RGB",0x5a1c3572,"stuff._Color.Color_Impl_.RGB","stuff/Color.hx",288,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_290_RG,"stuff._Color.Color_Impl_","RG",0x7fd480d0,"stuff._Color.Color_Impl_.RG","stuff/Color.hx",290,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_298_LuminanceAlpha,"stuff._Color.Color_Impl_","LuminanceAlpha",0xf7fe8601,"stuff._Color.Color_Impl_.LuminanceAlpha","stuff/Color.hx",298,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_307_Red,"stuff._Color.Color_Impl_","Red",0x5a1c4fb6,"stuff._Color.Color_Impl_.Red","stuff/Color.hx",307,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_313_Green,"stuff._Color.Color_Impl_","Green",0x08c8a868,"stuff._Color.Color_Impl_.Green","stuff/Color.hx",313,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_319_Blue,"stuff._Color.Color_Impl_","Blue",0x741b6495,"stuff._Color.Color_Impl_.Blue","stuff/Color.hx",319,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_325_Alpha,"stuff._Color.Color_Impl_","Alpha",0x90724103,"stuff._Color.Color_Impl_.Alpha","stuff/Color.hx",325,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_331_Luminance,"stuff._Color.Color_Impl_","Luminance",0x30c2081d,"stuff._Color.Color_Impl_.Luminance","stuff/Color.hx",331,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_343_FloatARGB,"stuff._Color.Color_Impl_","FloatARGB",0xbbcee90d,"stuff._Color.Color_Impl_.FloatARGB","stuff/Color.hx",343,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_352_FloatRGBA,"stuff._Color.Color_Impl_","FloatRGBA",0xc7032c75,"stuff._Color.Color_Impl_.FloatRGBA","stuff/Color.hx",352,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_360_FloatRGB,"stuff._Color.Color_Impl_","FloatRGB",0x7848564c,"stuff._Color.Color_Impl_.FloatRGB","stuff/Color.hx",360,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_367_FloatLuminanceAlpha,"stuff._Color.Color_Impl_","FloatLuminanceAlpha",0x5c09bf67,"stuff._Color.Color_Impl_.FloatLuminanceAlpha","stuff/Color.hx",367,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_376_FloatRed,"stuff._Color.Color_Impl_","FloatRed",0x78487090,"stuff._Color.Color_Impl_.FloatRed","stuff/Color.hx",376,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_382_FloatGreen,"stuff._Color.Color_Impl_","FloatGreen",0x22e233c2,"stuff._Color.Color_Impl_.FloatGreen","stuff/Color.hx",382,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_388_FloatBlue,"stuff._Color.Color_Impl_","FloatBlue",0xbc8c027b,"stuff._Color.Color_Impl_.FloatBlue","stuff/Color.hx",388,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_394_FloatAlpha,"stuff._Color.Color_Impl_","FloatAlpha",0xaa8bcc5d,"stuff._Color.Color_Impl_.FloatAlpha","stuff/Color.hx",394,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_400_FloatLuminance,"stuff._Color.Color_Impl_","FloatLuminance",0x500d4877,"stuff._Color.Color_Impl_.FloatLuminance","stuff/Color.hx",400,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_411_random,"stuff._Color.Color_Impl_","random",0x1445849e,"stuff._Color.Color_Impl_.random","stuff/Color.hx",411,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_422_randomize,"stuff._Color.Color_Impl_","randomize",0xcdc4c976,"stuff._Color.Color_Impl_.randomize","stuff/Color.hx",422,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_426_boot,"stuff._Color.Color_Impl_","boot",0x89447a0d,"stuff._Color.Color_Impl_.boot","stuff/Color.hx",426,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_427_boot,"stuff._Color.Color_Impl_","boot",0x89447a0d,"stuff._Color.Color_Impl_.boot","stuff/Color.hx",427,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_429_boot,"stuff._Color.Color_Impl_","boot",0x89447a0d,"stuff._Color.Color_Impl_.boot","stuff/Color.hx",429,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_430_boot,"stuff._Color.Color_Impl_","boot",0x89447a0d,"stuff._Color.Color_Impl_.boot","stuff/Color.hx",430,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_431_boot,"stuff._Color.Color_Impl_","boot",0x89447a0d,"stuff._Color.Color_Impl_.boot","stuff/Color.hx",431,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_432_boot,"stuff._Color.Color_Impl_","boot",0x89447a0d,"stuff._Color.Color_Impl_.boot","stuff/Color.hx",432,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_434_boot,"stuff._Color.Color_Impl_","boot",0x89447a0d,"stuff._Color.Color_Impl_.boot","stuff/Color.hx",434,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_435_boot,"stuff._Color.Color_Impl_","boot",0x89447a0d,"stuff._Color.Color_Impl_.boot","stuff/Color.hx",435,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_436_boot,"stuff._Color.Color_Impl_","boot",0x89447a0d,"stuff._Color.Color_Impl_.boot","stuff/Color.hx",436,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_437_boot,"stuff._Color.Color_Impl_","boot",0x89447a0d,"stuff._Color.Color_Impl_.boot","stuff/Color.hx",437,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_439_boot,"stuff._Color.Color_Impl_","boot",0x89447a0d,"stuff._Color.Color_Impl_.boot","stuff/Color.hx",439,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_440_boot,"stuff._Color.Color_Impl_","boot",0x89447a0d,"stuff._Color.Color_Impl_.boot","stuff/Color.hx",440,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_441_boot,"stuff._Color.Color_Impl_","boot",0x89447a0d,"stuff._Color.Color_Impl_.boot","stuff/Color.hx",441,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_442_boot,"stuff._Color.Color_Impl_","boot",0x89447a0d,"stuff._Color.Color_Impl_.boot","stuff/Color.hx",442,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_444_boot,"stuff._Color.Color_Impl_","boot",0x89447a0d,"stuff._Color.Color_Impl_.boot","stuff/Color.hx",444,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_445_boot,"stuff._Color.Color_Impl_","boot",0x89447a0d,"stuff._Color.Color_Impl_.boot","stuff/Color.hx",445,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_446_boot,"stuff._Color.Color_Impl_","boot",0x89447a0d,"stuff._Color.Color_Impl_.boot","stuff/Color.hx",446,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_448_boot,"stuff._Color.Color_Impl_","boot",0x89447a0d,"stuff._Color.Color_Impl_.boot","stuff/Color.hx",448,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_449_boot,"stuff._Color.Color_Impl_","boot",0x89447a0d,"stuff._Color.Color_Impl_.boot","stuff/Color.hx",449,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_450_boot,"stuff._Color.Color_Impl_","boot",0x89447a0d,"stuff._Color.Color_Impl_.boot","stuff/Color.hx",450,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_451_boot,"stuff._Color.Color_Impl_","boot",0x89447a0d,"stuff._Color.Color_Impl_.boot","stuff/Color.hx",451,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_452_boot,"stuff._Color.Color_Impl_","boot",0x89447a0d,"stuff._Color.Color_Impl_.boot","stuff/Color.hx",452,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_453_boot,"stuff._Color.Color_Impl_","boot",0x89447a0d,"stuff._Color.Color_Impl_.boot","stuff/Color.hx",453,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_454_boot,"stuff._Color.Color_Impl_","boot",0x89447a0d,"stuff._Color.Color_Impl_.boot","stuff/Color.hx",454,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_456_boot,"stuff._Color.Color_Impl_","boot",0x89447a0d,"stuff._Color.Color_Impl_.boot","stuff/Color.hx",456,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_457_boot,"stuff._Color.Color_Impl_","boot",0x89447a0d,"stuff._Color.Color_Impl_.boot","stuff/Color.hx",457,0x2fb47f16)
HX_LOCAL_STACK_FRAME(_hx_pos_618633dea247b5a7_458_boot,"stuff._Color.Color_Impl_","boot",0x89447a0d,"stuff._Color.Color_Impl_.boot","stuff/Color.hx",458,0x2fb47f16)
namespace stuff{
namespace _Color{

void Color_Impl__obj::__construct() { }

Dynamic Color_Impl__obj::__CreateEmpty() { return new Color_Impl__obj; }

void *Color_Impl__obj::_hx_vtable = 0;

Dynamic Color_Impl__obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Color_Impl__obj > _hx_result = new Color_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Color_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x20facf4f;
}

int Color_Impl__obj::get_r(int this1){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_63_get_r)
HXDLIN(  63)		return ((this1 >> 24) & 255);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Color_Impl__obj,get_r,return )

int Color_Impl__obj::get_g(int this1){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_64_get_g)
HXDLIN(  64)		return ((this1 >> 16) & 255);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Color_Impl__obj,get_g,return )

int Color_Impl__obj::get_b(int this1){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_65_get_b)
HXDLIN(  65)		return ((this1 >> 8) & 255);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Color_Impl__obj,get_b,return )

int Color_Impl__obj::get_a(int this1){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_66_get_a)
HXDLIN(  66)		return (this1 & 255);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Color_Impl__obj,get_a,return )

int Color_Impl__obj::get_rgb(int this1){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_68_get_rgb)
HXDLIN(  68)		return (this1 >> 8);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Color_Impl__obj,get_rgb,return )

int Color_Impl__obj::get_argb(int this1){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_69_get_argb)
HXDLIN(  69)		return ((this1 >> 8) | ((this1 & 255) << 24));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Color_Impl__obj,get_argb,return )

int Color_Impl__obj::get_red(int this1){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_71_get_red)
HXDLIN(  71)		return ((this1 >> 24) & 255);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Color_Impl__obj,get_red,return )

int Color_Impl__obj::get_green(int this1){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_72_get_green)
HXDLIN(  72)		return ((this1 >> 16) & 255);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Color_Impl__obj,get_green,return )

int Color_Impl__obj::get_blue(int this1){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_73_get_blue)
HXDLIN(  73)		return ((this1 >> 8) & 255);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Color_Impl__obj,get_blue,return )

int Color_Impl__obj::get_alpha(int this1){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_74_get_alpha)
HXDLIN(  74)		return (this1 & 255);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Color_Impl__obj,get_alpha,return )

int Color_Impl__obj::get_luminance(int this1){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_75_get_luminance)
HXDLIN(  75)		return ::Math_obj::round((( (Float)(((((this1 >> 24) & 255) + ((this1 >> 16) & 255)) + ((this1 >> 8) & 255))) ) / ( (Float)(3) )));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Color_Impl__obj,get_luminance,return )

Float Color_Impl__obj::get_rF(int this1){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_78_get_rF)
HXDLIN(  78)		return (( (Float)(((this1 >> 24) & 255)) ) / ( (Float)(255) ));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Color_Impl__obj,get_rF,return )

Float Color_Impl__obj::get_gF(int this1){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_79_get_gF)
HXDLIN(  79)		return (( (Float)(((this1 >> 16) & 255)) ) / ( (Float)(255) ));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Color_Impl__obj,get_gF,return )

Float Color_Impl__obj::get_bF(int this1){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_80_get_bF)
HXDLIN(  80)		return (( (Float)(((this1 >> 8) & 255)) ) / ( (Float)(255) ));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Color_Impl__obj,get_bF,return )

Float Color_Impl__obj::get_aF(int this1){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_81_get_aF)
HXDLIN(  81)		return (( (Float)((this1 & 255)) ) / ( (Float)(255) ));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Color_Impl__obj,get_aF,return )

Float Color_Impl__obj::get_redF(int this1){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_83_get_redF)
HXDLIN(  83)		return (( (Float)(((this1 >> 24) & 255)) ) / ( (Float)(255) ));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Color_Impl__obj,get_redF,return )

Float Color_Impl__obj::get_greenF(int this1){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_84_get_greenF)
HXDLIN(  84)		return (( (Float)(((this1 >> 16) & 255)) ) / ( (Float)(255) ));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Color_Impl__obj,get_greenF,return )

Float Color_Impl__obj::get_blueF(int this1){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_85_get_blueF)
HXDLIN(  85)		return (( (Float)(((this1 >> 8) & 255)) ) / ( (Float)(255) ));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Color_Impl__obj,get_blueF,return )

Float Color_Impl__obj::get_alphaF(int this1){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_86_get_alphaF)
HXDLIN(  86)		return (( (Float)((this1 & 255)) ) / ( (Float)(255) ));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Color_Impl__obj,get_alphaF,return )

Float Color_Impl__obj::get_luminanceF(int this1){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_87_get_luminanceF)
HXDLIN(  87)		return ((((( (Float)(((this1 >> 24) & 255)) ) / ( (Float)(255) )) + (( (Float)(((this1 >> 16) & 255)) ) / ( (Float)(255) ))) + (( (Float)(((this1 >> 8) & 255)) ) / ( (Float)(255) ))) / ( (Float)(3) ));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Color_Impl__obj,get_luminanceF,return )

int Color_Impl__obj::set_r(int this1,int r){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_90_set_r)
HXDLIN(  90)		this1 = ((this1 & 16777215) | (r << 24));
HXDLIN(  90)		return r;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Color_Impl__obj,set_r,return )

int Color_Impl__obj::set_g(int this1,int g){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_91_set_g)
HXDLIN(  91)		this1 = ((this1 & -16711681) | (g << 16));
HXDLIN(  91)		return g;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Color_Impl__obj,set_g,return )

int Color_Impl__obj::set_b(int this1,int b){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_92_set_b)
HXDLIN(  92)		this1 = ((this1 & -65281) | (b << 8));
HXDLIN(  92)		return b;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Color_Impl__obj,set_b,return )

int Color_Impl__obj::set_a(int this1,int a){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_93_set_a)
HXDLIN(  93)		this1 = ((this1 & -256) | a);
HXDLIN(  93)		return a;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Color_Impl__obj,set_a,return )

int Color_Impl__obj::set_rgb(int this1,int rgb){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_95_set_rgb)
HXDLIN(  95)		this1 = ((rgb << 8) | (this1 & 255));
HXDLIN(  95)		return rgb;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Color_Impl__obj,set_rgb,return )

int Color_Impl__obj::set_argb(int this1,int argb){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_96_set_argb)
HXDLIN(  96)		this1 = ((argb << 8) | (argb >> 24));
HXDLIN(  96)		return argb;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Color_Impl__obj,set_argb,return )

int Color_Impl__obj::set_red(int this1,int r){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_98_set_red)
HXDLIN(  98)		this1 = ((this1 & 16777215) | (r << 24));
HXDLIN(  98)		return r;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Color_Impl__obj,set_red,return )

int Color_Impl__obj::set_green(int this1,int g){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_99_set_green)
HXDLIN(  99)		this1 = ((this1 & -16711681) | (g << 16));
HXDLIN(  99)		return g;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Color_Impl__obj,set_green,return )

int Color_Impl__obj::set_blue(int this1,int b){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_100_set_blue)
HXDLIN( 100)		this1 = ((this1 & -65281) | (b << 8));
HXDLIN( 100)		return b;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Color_Impl__obj,set_blue,return )

int Color_Impl__obj::set_alpha(int this1,int a){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_101_set_alpha)
HXDLIN( 101)		this1 = ((this1 & -256) | a);
HXDLIN( 101)		return a;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Color_Impl__obj,set_alpha,return )

int Color_Impl__obj::set_luminance(int this1,int lum){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_102_set_luminance)
HXDLIN( 102)		this1 = ((((this1 & 255) | (lum << 24)) | (lum << 16)) | (lum << 8));
HXDLIN( 102)		return lum;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Color_Impl__obj,set_luminance,return )

Float Color_Impl__obj::set_rF(int this1,Float r){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_105_set_rF)
HXDLIN( 105)		int r1 = ::Std_obj::_hx_int((r * ( (Float)(255) )));
HXDLIN( 105)		this1 = ((this1 & 16777215) | (r1 << 24));
HXDLIN( 105)		return ( (Float)(r1) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Color_Impl__obj,set_rF,return )

Float Color_Impl__obj::set_gF(int this1,Float g){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_106_set_gF)
HXDLIN( 106)		int g1 = ::Std_obj::_hx_int((g * ( (Float)(255) )));
HXDLIN( 106)		this1 = ((this1 & -16711681) | (g1 << 16));
HXDLIN( 106)		return ( (Float)(g1) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Color_Impl__obj,set_gF,return )

Float Color_Impl__obj::set_bF(int this1,Float b){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_107_set_bF)
HXDLIN( 107)		int b1 = ::Std_obj::_hx_int((b * ( (Float)(255) )));
HXDLIN( 107)		this1 = ((this1 & -65281) | (b1 << 8));
HXDLIN( 107)		return ( (Float)(b1) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Color_Impl__obj,set_bF,return )

Float Color_Impl__obj::set_aF(int this1,Float a){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_108_set_aF)
HXDLIN( 108)		int a1 = ::Std_obj::_hx_int((a * ( (Float)(255) )));
HXDLIN( 108)		this1 = ((this1 & -256) | a1);
HXDLIN( 108)		return ( (Float)(a1) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Color_Impl__obj,set_aF,return )

Float Color_Impl__obj::set_redF(int this1,Float r){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_110_set_redF)
HXDLIN( 110)		int r1 = ::Std_obj::_hx_int((r * ( (Float)(255) )));
HXDLIN( 110)		this1 = ((this1 & 16777215) | (r1 << 24));
HXDLIN( 110)		return ( (Float)(r1) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Color_Impl__obj,set_redF,return )

Float Color_Impl__obj::set_greenF(int this1,Float g){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_111_set_greenF)
HXDLIN( 111)		int g1 = ::Std_obj::_hx_int((g * ( (Float)(255) )));
HXDLIN( 111)		this1 = ((this1 & -16711681) | (g1 << 16));
HXDLIN( 111)		return ( (Float)(g1) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Color_Impl__obj,set_greenF,return )

Float Color_Impl__obj::set_blueF(int this1,Float b){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_112_set_blueF)
HXDLIN( 112)		int b1 = ::Std_obj::_hx_int((b * ( (Float)(255) )));
HXDLIN( 112)		this1 = ((this1 & -65281) | (b1 << 8));
HXDLIN( 112)		return ( (Float)(b1) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Color_Impl__obj,set_blueF,return )

Float Color_Impl__obj::set_alphaF(int this1,Float a){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_113_set_alphaF)
HXDLIN( 113)		int a1 = ::Std_obj::_hx_int((a * ( (Float)(255) )));
HXDLIN( 113)		this1 = ((this1 & -256) | a1);
HXDLIN( 113)		return ( (Float)(a1) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Color_Impl__obj,set_alphaF,return )

Float Color_Impl__obj::set_luminanceF(int this1,Float lum){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_114_set_luminanceF)
HXDLIN( 114)		int this2 = ((this1 & 255) | (::Std_obj::_hx_int((lum * ( (Float)(255) ))) << 24));
HXDLIN( 114)		int this3 = (this2 | (::Std_obj::_hx_int((lum * ( (Float)(255) ))) << 16));
HXDLIN( 114)		this1 = (this3 | (::Std_obj::_hx_int((lum * ( (Float)(255) ))) << 8));
HXDLIN( 114)		return lum;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Color_Impl__obj,set_luminanceF,return )

int Color_Impl__obj::setARGB(int this1,int a,int r,int g,int b){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_129_setARGB)
HXDLIN( 129)		this1 = ((((a << 24) | (r << 16)) | (g << 8)) | b);
HXDLIN( 129)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(Color_Impl__obj,setARGB,return )

int Color_Impl__obj::setRGBA(int this1,int r,int g,int b,int a){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_138_setRGBA)
HXDLIN( 138)		this1 = ((((r << 24) | (g << 16)) | (b << 8)) | a);
HXDLIN( 138)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(Color_Impl__obj,setRGBA,return )

int Color_Impl__obj::setRGB(int this1,int r,int g,int b){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_146_setRGB)
HXDLIN( 146)		this1 = ((((this1 & 255) | (r << 24)) | (g << 16)) | (b << 8));
HXDLIN( 146)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(Color_Impl__obj,setRGB,return )

int Color_Impl__obj::setLuminanceAlpha(int this1,int lum,int a){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_153_setLuminanceAlpha)
HXDLIN( 153)		this1 = ((((lum << 24) | (lum << 16)) | (lum << 8)) | a);
HXDLIN( 153)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Color_Impl__obj,setLuminanceAlpha,return )

int Color_Impl__obj::setRed(int this1,int r){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_162_setRed)
HXDLIN( 162)		this1 = ((this1 & 16777215) | (r << 24));
HXDLIN( 162)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Color_Impl__obj,setRed,return )

int Color_Impl__obj::setGreen(int this1,int g){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_168_setGreen)
HXDLIN( 168)		this1 = ((this1 & -16711681) | (g << 16));
HXDLIN( 168)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Color_Impl__obj,setGreen,return )

int Color_Impl__obj::setBlue(int this1,int b){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_174_setBlue)
HXDLIN( 174)		this1 = ((this1 & -65281) | (b << 8));
HXDLIN( 174)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Color_Impl__obj,setBlue,return )

int Color_Impl__obj::setAlpha(int this1,int a){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_180_setAlpha)
HXDLIN( 180)		this1 = ((this1 & -256) | a);
HXDLIN( 180)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Color_Impl__obj,setAlpha,return )

int Color_Impl__obj::setLuminance(int this1,int lum){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_186_setLuminance)
HXDLIN( 186)		this1 = ((((this1 & 255) | (lum << 24)) | (lum << 16)) | (lum << 8));
HXDLIN( 186)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Color_Impl__obj,setLuminance,return )

int Color_Impl__obj::setFloatARGB(int this1,Float a,Float r,Float g,Float b){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_198_setFloatARGB)
HXDLIN( 198)		int this2 = (::Std_obj::_hx_int((a * ( (Float)(255) ))) << 24);
HXDLIN( 198)		int this3 = (this2 | (::Std_obj::_hx_int((r * ( (Float)(255) ))) << 16));
HXDLIN( 198)		int this4 = (this3 | (::Std_obj::_hx_int((g * ( (Float)(255) ))) << 8));
HXDLIN( 198)		this1 = (this4 | ::Std_obj::_hx_int((b * ( (Float)(255) ))));
HXDLIN( 198)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(Color_Impl__obj,setFloatARGB,return )

int Color_Impl__obj::setFloatRGBA(int this1,Float r,Float g,Float b,Float a){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_207_setFloatRGBA)
HXDLIN( 207)		int this2 = (::Std_obj::_hx_int((r * ( (Float)(255) ))) << 24);
HXDLIN( 207)		int this3 = (this2 | (::Std_obj::_hx_int((g * ( (Float)(255) ))) << 16));
HXDLIN( 207)		int this4 = (this3 | (::Std_obj::_hx_int((b * ( (Float)(255) ))) << 8));
HXDLIN( 207)		this1 = (this4 | ::Std_obj::_hx_int((a * ( (Float)(255) ))));
HXDLIN( 207)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(Color_Impl__obj,setFloatRGBA,return )

int Color_Impl__obj::setFloatRGB(int this1,Float r,Float g,Float b){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_215_setFloatRGB)
HXDLIN( 215)		int this2 = ((this1 & 255) | (::Std_obj::_hx_int((r * ( (Float)(255) ))) << 24));
HXDLIN( 215)		int this3 = (this2 | (::Std_obj::_hx_int((g * ( (Float)(255) ))) << 16));
HXDLIN( 215)		this1 = (this3 | (::Std_obj::_hx_int((b * ( (Float)(255) ))) << 8));
HXDLIN( 215)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(Color_Impl__obj,setFloatRGB,return )

int Color_Impl__obj::setFloatLuminanceAlpha(int this1,Float lum,Float a){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_222_setFloatLuminanceAlpha)
HXDLIN( 222)		int this2 = (::Std_obj::_hx_int((lum * ( (Float)(255) ))) << 24);
HXDLIN( 222)		int this3 = (this2 | (::Std_obj::_hx_int((lum * ( (Float)(255) ))) << 16));
HXDLIN( 222)		int this4 = (this3 | (::Std_obj::_hx_int((lum * ( (Float)(255) ))) << 8));
HXDLIN( 222)		this1 = (this4 | ::Std_obj::_hx_int((a * ( (Float)(255) ))));
HXDLIN( 222)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Color_Impl__obj,setFloatLuminanceAlpha,return )

int Color_Impl__obj::setFloatRed(int this1,Float r){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_231_setFloatRed)
HXDLIN( 231)		this1 = ((this1 & 16777215) | (::Std_obj::_hx_int((r * ( (Float)(255) ))) << 24));
HXDLIN( 231)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Color_Impl__obj,setFloatRed,return )

int Color_Impl__obj::setFloatGreen(int this1,Float g){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_237_setFloatGreen)
HXDLIN( 237)		this1 = ((this1 & -16711681) | (::Std_obj::_hx_int((g * ( (Float)(255) ))) << 16));
HXDLIN( 237)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Color_Impl__obj,setFloatGreen,return )

int Color_Impl__obj::setFloatBlue(int this1,Float b){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_243_setFloatBlue)
HXDLIN( 243)		this1 = ((this1 & -65281) | (::Std_obj::_hx_int((b * ( (Float)(255) ))) << 8));
HXDLIN( 243)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Color_Impl__obj,setFloatBlue,return )

int Color_Impl__obj::setFloatAlpha(int this1,Float a){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_249_setFloatAlpha)
HXDLIN( 249)		this1 = ((this1 & -256) | ::Std_obj::_hx_int((a * ( (Float)(255) ))));
HXDLIN( 249)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Color_Impl__obj,setFloatAlpha,return )

int Color_Impl__obj::setFloatLuminance(int this1,Float lum){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_255_setFloatLuminance)
HXDLIN( 255)		int this2 = ((this1 & 255) | (::Std_obj::_hx_int((lum * ( (Float)(255) ))) << 24));
HXDLIN( 255)		int this3 = (this2 | (::Std_obj::_hx_int((lum * ( (Float)(255) ))) << 16));
HXDLIN( 255)		this1 = (this3 | (::Std_obj::_hx_int((lum * ( (Float)(255) ))) << 8));
HXDLIN( 255)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Color_Impl__obj,setFloatLuminance,return )

int Color_Impl__obj::ARGB(int a,int r,int g,int b){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_271_ARGB)
HXDLIN( 271)		return ((((a << 24) | (r << 16)) | (g << 8)) | b);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(Color_Impl__obj,ARGB,return )

int Color_Impl__obj::RGBA(int r,int g,int b,int a){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_280_RGBA)
HXDLIN( 280)		return ((((r << 24) | (g << 16)) | (b << 8)) | a);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(Color_Impl__obj,RGBA,return )

int Color_Impl__obj::RGB(int r,int g,int b){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_288_RGB)
HXDLIN( 288)		return ((((r << 24) | (g << 16)) | (b << 8)) | 255);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Color_Impl__obj,RGB,return )

int Color_Impl__obj::RG(int r,int g){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_290_RG)
HXDLIN( 290)		return (((r << 24) | (g << 16)) | 255);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Color_Impl__obj,RG,return )

int Color_Impl__obj::LuminanceAlpha(int lum,int a){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_298_LuminanceAlpha)
HXDLIN( 298)		return ((((lum << 24) | (lum << 16)) | (lum << 8)) | a);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Color_Impl__obj,LuminanceAlpha,return )

int Color_Impl__obj::Red(int r){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_307_Red)
HXDLIN( 307)		return ((r << 24) | 255);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Color_Impl__obj,Red,return )

int Color_Impl__obj::Green(int g){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_313_Green)
HXDLIN( 313)		return ((g << 16) | 255);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Color_Impl__obj,Green,return )

int Color_Impl__obj::Blue(int b){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_319_Blue)
HXDLIN( 319)		return ((b << 8) | 255);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Color_Impl__obj,Blue,return )

int Color_Impl__obj::Alpha(int a){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_325_Alpha)
HXDLIN( 325)		return a;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Color_Impl__obj,Alpha,return )

int Color_Impl__obj::Luminance(int lum){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_331_Luminance)
HXDLIN( 331)		return ((((lum << 24) | (lum << 16)) | (lum << 8)) | 255);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Color_Impl__obj,Luminance,return )

int Color_Impl__obj::FloatARGB(Float a,Float r,Float g,Float b){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_343_FloatARGB)
HXDLIN( 343)		int _hx_tmp = (::Std_obj::_hx_int((a * ( (Float)(255) ))) << 24);
HXDLIN( 343)		int _hx_tmp1 = (_hx_tmp | (::Std_obj::_hx_int((r * ( (Float)(255) ))) << 16));
HXDLIN( 343)		int _hx_tmp2 = (_hx_tmp1 | (::Std_obj::_hx_int((g * ( (Float)(255) ))) << 8));
HXDLIN( 343)		return (_hx_tmp2 | ::Std_obj::_hx_int((b * ( (Float)(255) ))));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(Color_Impl__obj,FloatARGB,return )

int Color_Impl__obj::FloatRGBA(Float r,Float g,Float b,Float a){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_352_FloatRGBA)
HXDLIN( 352)		int _hx_tmp = (::Std_obj::_hx_int((r * ( (Float)(255) ))) << 24);
HXDLIN( 352)		int _hx_tmp1 = (_hx_tmp | (::Std_obj::_hx_int((g * ( (Float)(255) ))) << 16));
HXDLIN( 352)		int _hx_tmp2 = (_hx_tmp1 | (::Std_obj::_hx_int((b * ( (Float)(255) ))) << 8));
HXDLIN( 352)		return (_hx_tmp2 | ::Std_obj::_hx_int((a * ( (Float)(255) ))));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(Color_Impl__obj,FloatRGBA,return )

int Color_Impl__obj::FloatRGB(Float r,Float g,Float b){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_360_FloatRGB)
HXDLIN( 360)		int _hx_tmp = (::Std_obj::_hx_int((r * ( (Float)(255) ))) << 24);
HXDLIN( 360)		int _hx_tmp1 = (_hx_tmp | (::Std_obj::_hx_int((g * ( (Float)(255) ))) << 16));
HXDLIN( 360)		return ((_hx_tmp1 | (::Std_obj::_hx_int((b * ( (Float)(255) ))) << 8)) | 255);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Color_Impl__obj,FloatRGB,return )

int Color_Impl__obj::FloatLuminanceAlpha(Float lum,Float a){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_367_FloatLuminanceAlpha)
HXDLIN( 367)		int _hx_tmp = (::Std_obj::_hx_int((lum * ( (Float)(255) ))) << 24);
HXDLIN( 367)		int _hx_tmp1 = (_hx_tmp | (::Std_obj::_hx_int((lum * ( (Float)(255) ))) << 16));
HXDLIN( 367)		int _hx_tmp2 = (_hx_tmp1 | (::Std_obj::_hx_int((lum * ( (Float)(255) ))) << 8));
HXDLIN( 367)		return (_hx_tmp2 | ::Std_obj::_hx_int((a * ( (Float)(255) ))));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Color_Impl__obj,FloatLuminanceAlpha,return )

int Color_Impl__obj::FloatRed(Float r){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_376_FloatRed)
HXDLIN( 376)		return ((::Std_obj::_hx_int((r * ( (Float)(255) ))) << 24) | 255);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Color_Impl__obj,FloatRed,return )

int Color_Impl__obj::FloatGreen(Float g){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_382_FloatGreen)
HXDLIN( 382)		return ((::Std_obj::_hx_int((g * ( (Float)(255) ))) << 16) | 255);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Color_Impl__obj,FloatGreen,return )

int Color_Impl__obj::FloatBlue(Float b){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_388_FloatBlue)
HXDLIN( 388)		return ((::Std_obj::_hx_int((b * ( (Float)(255) ))) << 8) | 255);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Color_Impl__obj,FloatBlue,return )

int Color_Impl__obj::FloatAlpha(Float a){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_394_FloatAlpha)
HXDLIN( 394)		return ::Std_obj::_hx_int((a * ( (Float)(255) )));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Color_Impl__obj,FloatAlpha,return )

int Color_Impl__obj::FloatLuminance(Float lum){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_400_FloatLuminance)
HXDLIN( 400)		int _hx_tmp = (::Std_obj::_hx_int((lum * ( (Float)(255) ))) << 24);
HXDLIN( 400)		int _hx_tmp1 = (_hx_tmp | (::Std_obj::_hx_int((lum * ( (Float)(255) ))) << 16));
HXDLIN( 400)		return ((_hx_tmp1 | (::Std_obj::_hx_int((lum * ( (Float)(255) ))) << 8)) | 255);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Color_Impl__obj,FloatLuminance,return )

int Color_Impl__obj::random( ::Dynamic alpha){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_411_random)
HXDLIN( 411)		if (::hx::IsNull( alpha )) {
HXLINE( 412)			int _hx_tmp = (::Std_obj::_hx_int((::Math_obj::random() * ( (Float)(256) ))) << 24);
HXDLIN( 412)			return (_hx_tmp | ::Std_obj::random(16777216));
            		}
            		else {
HXLINE( 414)			int _hx_tmp1 = (::Std_obj::_hx_int((::Math_obj::random() * ( (Float)(256) ))) << 24);
HXDLIN( 414)			return ((_hx_tmp1 | (::Std_obj::random(65536) << 8)) | ( (int)(alpha) ));
            		}
HXLINE( 411)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Color_Impl__obj,random,return )

void Color_Impl__obj::randomize(int this1, ::Dynamic alpha){
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_422_randomize)
HXDLIN( 422)		if (::hx::IsNull( alpha )) {
HXDLIN( 422)			int this2 = (::Std_obj::_hx_int((::Math_obj::random() * ( (Float)(256) ))) << 24);
HXDLIN( 422)			this1 = (this2 | ::Std_obj::random(16777216));
            		}
            		else {
HXDLIN( 422)			int this3 = (::Std_obj::_hx_int((::Math_obj::random() * ( (Float)(256) ))) << 24);
HXDLIN( 422)			this1 = ((this3 | (::Std_obj::random(65536) << 8)) | ( (int)(alpha) ));
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Color_Impl__obj,randomize,(void))

int Color_Impl__obj::BLACK;

int Color_Impl__obj::WHITE;

int Color_Impl__obj::RED;

int Color_Impl__obj::RED1;

int Color_Impl__obj::RED2;

int Color_Impl__obj::RED3;

int Color_Impl__obj::GREEN;

int Color_Impl__obj::GREEN1;

int Color_Impl__obj::GREEN2;

int Color_Impl__obj::GREEN3;

int Color_Impl__obj::BLUE;

int Color_Impl__obj::BLUE1;

int Color_Impl__obj::BLUE2;

int Color_Impl__obj::BLUE3;

int Color_Impl__obj::YELLOW;

int Color_Impl__obj::MAGENTA;

int Color_Impl__obj::CYAN;

int Color_Impl__obj::GREY1;

int Color_Impl__obj::GREY2;

int Color_Impl__obj::GREY3;

int Color_Impl__obj::GREY4;

int Color_Impl__obj::GREY5;

int Color_Impl__obj::GREY6;

int Color_Impl__obj::GREY7;

int Color_Impl__obj::GOLD;

int Color_Impl__obj::ORANGE;

int Color_Impl__obj::LIME;


Color_Impl__obj::Color_Impl__obj()
{
}

bool Color_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"RG") ) { outValue = RG_dyn(); return true; }
		break;
	case 3:
		if (HX_FIELD_EQ(inName,"RGB") ) { outValue = RGB_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"Red") ) { outValue = Red_dyn(); return true; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"ARGB") ) { outValue = ARGB_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"RGBA") ) { outValue = RGBA_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"Blue") ) { outValue = Blue_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"get_r") ) { outValue = get_r_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_g") ) { outValue = get_g_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_b") ) { outValue = get_b_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_a") ) { outValue = get_a_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_r") ) { outValue = set_r_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_g") ) { outValue = set_g_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_b") ) { outValue = set_b_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_a") ) { outValue = set_a_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"Green") ) { outValue = Green_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"Alpha") ) { outValue = Alpha_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"get_rF") ) { outValue = get_rF_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_gF") ) { outValue = get_gF_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_bF") ) { outValue = get_bF_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_aF") ) { outValue = get_aF_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_rF") ) { outValue = set_rF_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_gF") ) { outValue = set_gF_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_bF") ) { outValue = set_bF_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_aF") ) { outValue = set_aF_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"setRGB") ) { outValue = setRGB_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"setRed") ) { outValue = setRed_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"random") ) { outValue = random_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"get_rgb") ) { outValue = get_rgb_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_red") ) { outValue = get_red_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_rgb") ) { outValue = set_rgb_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_red") ) { outValue = set_red_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"setARGB") ) { outValue = setARGB_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"setRGBA") ) { outValue = setRGBA_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"setBlue") ) { outValue = setBlue_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"get_argb") ) { outValue = get_argb_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_blue") ) { outValue = get_blue_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_redF") ) { outValue = get_redF_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_argb") ) { outValue = set_argb_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_blue") ) { outValue = set_blue_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_redF") ) { outValue = set_redF_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"setGreen") ) { outValue = setGreen_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"setAlpha") ) { outValue = setAlpha_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"FloatRGB") ) { outValue = FloatRGB_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"FloatRed") ) { outValue = FloatRed_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"get_green") ) { outValue = get_green_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_alpha") ) { outValue = get_alpha_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_blueF") ) { outValue = get_blueF_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_green") ) { outValue = set_green_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_alpha") ) { outValue = set_alpha_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_blueF") ) { outValue = set_blueF_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"Luminance") ) { outValue = Luminance_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"FloatARGB") ) { outValue = FloatARGB_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"FloatRGBA") ) { outValue = FloatRGBA_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"FloatBlue") ) { outValue = FloatBlue_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"randomize") ) { outValue = randomize_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"get_greenF") ) { outValue = get_greenF_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_alphaF") ) { outValue = get_alphaF_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_greenF") ) { outValue = set_greenF_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_alphaF") ) { outValue = set_alphaF_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"FloatGreen") ) { outValue = FloatGreen_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"FloatAlpha") ) { outValue = FloatAlpha_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"setFloatRGB") ) { outValue = setFloatRGB_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"setFloatRed") ) { outValue = setFloatRed_dyn(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"setLuminance") ) { outValue = setLuminance_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"setFloatARGB") ) { outValue = setFloatARGB_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"setFloatRGBA") ) { outValue = setFloatRGBA_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"setFloatBlue") ) { outValue = setFloatBlue_dyn(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"get_luminance") ) { outValue = get_luminance_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_luminance") ) { outValue = set_luminance_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"setFloatGreen") ) { outValue = setFloatGreen_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"setFloatAlpha") ) { outValue = setFloatAlpha_dyn(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"get_luminanceF") ) { outValue = get_luminanceF_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_luminanceF") ) { outValue = set_luminanceF_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"LuminanceAlpha") ) { outValue = LuminanceAlpha_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"FloatLuminance") ) { outValue = FloatLuminance_dyn(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"setLuminanceAlpha") ) { outValue = setLuminanceAlpha_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"setFloatLuminance") ) { outValue = setFloatLuminance_dyn(); return true; }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"FloatLuminanceAlpha") ) { outValue = FloatLuminanceAlpha_dyn(); return true; }
		break;
	case 22:
		if (HX_FIELD_EQ(inName,"setFloatLuminanceAlpha") ) { outValue = setFloatLuminanceAlpha_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *Color_Impl__obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo Color_Impl__obj_sStaticStorageInfo[] = {
	{::hx::fsInt,(void *) &Color_Impl__obj::BLACK,HX_("BLACK",9f,0d,e0,32)},
	{::hx::fsInt,(void *) &Color_Impl__obj::WHITE,HX_("WHITE",89,82,ab,47)},
	{::hx::fsInt,(void *) &Color_Impl__obj::RED,HX_("RED",31,75,3e,00)},
	{::hx::fsInt,(void *) &Color_Impl__obj::RED1,HX_("RED1",e0,15,68,36)},
	{::hx::fsInt,(void *) &Color_Impl__obj::RED2,HX_("RED2",e1,15,68,36)},
	{::hx::fsInt,(void *) &Color_Impl__obj::RED3,HX_("RED3",e2,15,68,36)},
	{::hx::fsInt,(void *) &Color_Impl__obj::GREEN,HX_("GREEN",a3,46,db,17)},
	{::hx::fsInt,(void *) &Color_Impl__obj::GREEN1,HX_("GREEN1",2e,88,02,c8)},
	{::hx::fsInt,(void *) &Color_Impl__obj::GREEN2,HX_("GREEN2",2f,88,02,c8)},
	{::hx::fsInt,(void *) &Color_Impl__obj::GREEN3,HX_("GREEN3",30,88,02,c8)},
	{::hx::fsInt,(void *) &Color_Impl__obj::BLUE,HX_("BLUE",9a,0a,da,2b)},
	{::hx::fsInt,(void *) &Color_Impl__obj::BLUE1,HX_("BLUE1",57,3c,ef,32)},
	{::hx::fsInt,(void *) &Color_Impl__obj::BLUE2,HX_("BLUE2",58,3c,ef,32)},
	{::hx::fsInt,(void *) &Color_Impl__obj::BLUE3,HX_("BLUE3",59,3c,ef,32)},
	{::hx::fsInt,(void *) &Color_Impl__obj::YELLOW,HX_("YELLOW",74,4b,df,82)},
	{::hx::fsInt,(void *) &Color_Impl__obj::MAGENTA,HX_("MAGENTA",09,8e,71,8e)},
	{::hx::fsInt,(void *) &Color_Impl__obj::CYAN,HX_("CYAN",23,0d,8d,2c)},
	{::hx::fsInt,(void *) &Color_Impl__obj::GREY1,HX_("GREY1",f2,57,db,17)},
	{::hx::fsInt,(void *) &Color_Impl__obj::GREY2,HX_("GREY2",f3,57,db,17)},
	{::hx::fsInt,(void *) &Color_Impl__obj::GREY3,HX_("GREY3",f4,57,db,17)},
	{::hx::fsInt,(void *) &Color_Impl__obj::GREY4,HX_("GREY4",f5,57,db,17)},
	{::hx::fsInt,(void *) &Color_Impl__obj::GREY5,HX_("GREY5",f6,57,db,17)},
	{::hx::fsInt,(void *) &Color_Impl__obj::GREY6,HX_("GREY6",f7,57,db,17)},
	{::hx::fsInt,(void *) &Color_Impl__obj::GREY7,HX_("GREY7",f8,57,db,17)},
	{::hx::fsInt,(void *) &Color_Impl__obj::GOLD,HX_("GOLD",a0,5a,2a,2f)},
	{::hx::fsInt,(void *) &Color_Impl__obj::ORANGE,HX_("ORANGE",ee,5e,3f,f8)},
	{::hx::fsInt,(void *) &Color_Impl__obj::LIME,HX_("LIME",15,df,73,32)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static void Color_Impl__obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Color_Impl__obj::BLACK,"BLACK");
	HX_MARK_MEMBER_NAME(Color_Impl__obj::WHITE,"WHITE");
	HX_MARK_MEMBER_NAME(Color_Impl__obj::RED,"RED");
	HX_MARK_MEMBER_NAME(Color_Impl__obj::RED1,"RED1");
	HX_MARK_MEMBER_NAME(Color_Impl__obj::RED2,"RED2");
	HX_MARK_MEMBER_NAME(Color_Impl__obj::RED3,"RED3");
	HX_MARK_MEMBER_NAME(Color_Impl__obj::GREEN,"GREEN");
	HX_MARK_MEMBER_NAME(Color_Impl__obj::GREEN1,"GREEN1");
	HX_MARK_MEMBER_NAME(Color_Impl__obj::GREEN2,"GREEN2");
	HX_MARK_MEMBER_NAME(Color_Impl__obj::GREEN3,"GREEN3");
	HX_MARK_MEMBER_NAME(Color_Impl__obj::BLUE,"BLUE");
	HX_MARK_MEMBER_NAME(Color_Impl__obj::BLUE1,"BLUE1");
	HX_MARK_MEMBER_NAME(Color_Impl__obj::BLUE2,"BLUE2");
	HX_MARK_MEMBER_NAME(Color_Impl__obj::BLUE3,"BLUE3");
	HX_MARK_MEMBER_NAME(Color_Impl__obj::YELLOW,"YELLOW");
	HX_MARK_MEMBER_NAME(Color_Impl__obj::MAGENTA,"MAGENTA");
	HX_MARK_MEMBER_NAME(Color_Impl__obj::CYAN,"CYAN");
	HX_MARK_MEMBER_NAME(Color_Impl__obj::GREY1,"GREY1");
	HX_MARK_MEMBER_NAME(Color_Impl__obj::GREY2,"GREY2");
	HX_MARK_MEMBER_NAME(Color_Impl__obj::GREY3,"GREY3");
	HX_MARK_MEMBER_NAME(Color_Impl__obj::GREY4,"GREY4");
	HX_MARK_MEMBER_NAME(Color_Impl__obj::GREY5,"GREY5");
	HX_MARK_MEMBER_NAME(Color_Impl__obj::GREY6,"GREY6");
	HX_MARK_MEMBER_NAME(Color_Impl__obj::GREY7,"GREY7");
	HX_MARK_MEMBER_NAME(Color_Impl__obj::GOLD,"GOLD");
	HX_MARK_MEMBER_NAME(Color_Impl__obj::ORANGE,"ORANGE");
	HX_MARK_MEMBER_NAME(Color_Impl__obj::LIME,"LIME");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Color_Impl__obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Color_Impl__obj::BLACK,"BLACK");
	HX_VISIT_MEMBER_NAME(Color_Impl__obj::WHITE,"WHITE");
	HX_VISIT_MEMBER_NAME(Color_Impl__obj::RED,"RED");
	HX_VISIT_MEMBER_NAME(Color_Impl__obj::RED1,"RED1");
	HX_VISIT_MEMBER_NAME(Color_Impl__obj::RED2,"RED2");
	HX_VISIT_MEMBER_NAME(Color_Impl__obj::RED3,"RED3");
	HX_VISIT_MEMBER_NAME(Color_Impl__obj::GREEN,"GREEN");
	HX_VISIT_MEMBER_NAME(Color_Impl__obj::GREEN1,"GREEN1");
	HX_VISIT_MEMBER_NAME(Color_Impl__obj::GREEN2,"GREEN2");
	HX_VISIT_MEMBER_NAME(Color_Impl__obj::GREEN3,"GREEN3");
	HX_VISIT_MEMBER_NAME(Color_Impl__obj::BLUE,"BLUE");
	HX_VISIT_MEMBER_NAME(Color_Impl__obj::BLUE1,"BLUE1");
	HX_VISIT_MEMBER_NAME(Color_Impl__obj::BLUE2,"BLUE2");
	HX_VISIT_MEMBER_NAME(Color_Impl__obj::BLUE3,"BLUE3");
	HX_VISIT_MEMBER_NAME(Color_Impl__obj::YELLOW,"YELLOW");
	HX_VISIT_MEMBER_NAME(Color_Impl__obj::MAGENTA,"MAGENTA");
	HX_VISIT_MEMBER_NAME(Color_Impl__obj::CYAN,"CYAN");
	HX_VISIT_MEMBER_NAME(Color_Impl__obj::GREY1,"GREY1");
	HX_VISIT_MEMBER_NAME(Color_Impl__obj::GREY2,"GREY2");
	HX_VISIT_MEMBER_NAME(Color_Impl__obj::GREY3,"GREY3");
	HX_VISIT_MEMBER_NAME(Color_Impl__obj::GREY4,"GREY4");
	HX_VISIT_MEMBER_NAME(Color_Impl__obj::GREY5,"GREY5");
	HX_VISIT_MEMBER_NAME(Color_Impl__obj::GREY6,"GREY6");
	HX_VISIT_MEMBER_NAME(Color_Impl__obj::GREY7,"GREY7");
	HX_VISIT_MEMBER_NAME(Color_Impl__obj::GOLD,"GOLD");
	HX_VISIT_MEMBER_NAME(Color_Impl__obj::ORANGE,"ORANGE");
	HX_VISIT_MEMBER_NAME(Color_Impl__obj::LIME,"LIME");
};

#endif

::hx::Class Color_Impl__obj::__mClass;

static ::String Color_Impl__obj_sStaticFields[] = {
	HX_("get_r",49,a5,60,91),
	HX_("get_g",3e,a5,60,91),
	HX_("get_b",39,a5,60,91),
	HX_("get_a",38,a5,60,91),
	HX_("get_rgb",a4,a3,cb,26),
	HX_("get_argb",d5,48,2f,c0),
	HX_("get_red",e8,a1,cb,26),
	HX_("get_green",1a,6b,96,dd),
	HX_("get_blue",23,fe,d3,c0),
	HX_("get_alpha",b5,03,40,65),
	HX_("get_luminance",cf,0b,ec,29),
	HX_("get_rF",dd,fa,2f,a3),
	HX_("get_gF",48,f1,2f,a3),
	HX_("get_bF",ed,ec,2f,a3),
	HX_("get_aF",0e,ec,2f,a3),
	HX_("get_redF",5e,09,62,cb),
	HX_("get_greenF",ec,4b,07,06),
	HX_("get_blueF",c3,60,aa,f8),
	HX_("get_alphaF",f1,3a,c3,32),
	HX_("get_luminanceF",97,49,9e,84),
	HX_("set_r",55,9b,2f,7a),
	HX_("set_g",4a,9b,2f,7a),
	HX_("set_b",45,9b,2f,7a),
	HX_("set_a",44,9b,2f,7a),
	HX_("set_rgb",b0,34,cd,19),
	HX_("set_argb",49,a2,8c,6e),
	HX_("set_red",f4,32,cd,19),
	HX_("set_green",26,57,e7,c0),
	HX_("set_blue",97,57,31,6f),
	HX_("set_alpha",c1,ef,90,48),
	HX_("set_luminance",db,ed,f1,6e),
	HX_("set_rF",51,4f,78,6f),
	HX_("set_gF",bc,45,78,6f),
	HX_("set_bF",61,41,78,6f),
	HX_("set_aF",82,40,78,6f),
	HX_("set_redF",d2,62,bf,79),
	HX_("set_greenF",60,ea,84,09),
	HX_("set_blueF",cf,4c,fb,db),
	HX_("set_alphaF",65,d9,40,36),
	HX_("set_luminanceF",0b,32,be,a4),
	HX_("setARGB",ee,69,e0,05),
	HX_("setRGBA",56,ad,14,11),
	HX_("setRGB",8b,4c,6e,6f),
	HX_("setLuminanceAlpha",88,83,77,be),
	HX_("setRed",cf,66,6e,6f),
	HX_("setGreen",c1,77,21,a8),
	HX_("setBlue",5c,83,9d,06),
	HX_("setAlpha",5c,10,cb,2f),
	HX_("setLuminance",f6,f7,d7,8c),
	HX_("setFloatARGB",e6,d8,e4,17),
	HX_("setFloatRGBA",4e,1c,19,23),
	HX_("setFloatRGB",93,e4,ee,0d),
	HX_("setFloatLuminanceAlpha",80,58,09,67),
	HX_("setFloatRed",d7,fe,ee,0d),
	HX_("setFloatGreen",c9,21,fe,59),
	HX_("setFloatBlue",54,f2,a1,18),
	HX_("setFloatAlpha",64,ba,a7,e1),
	HX_("setFloatLuminance",fe,45,86,16),
	HX_("ARGB",4c,55,35,2b),
	HX_("RGBA",b4,98,69,36),
	HX_("RGB",ed,76,3e,00),
	HX_("RG",b5,47,00,00),
	HX_("LuminanceAlpha",66,90,eb,d2),
	HX_("Red",31,91,3e,00),
	HX_("Green",a3,7e,1a,2d),
	HX_("Blue",ba,6e,f2,2b),
	HX_("Alpha",3e,17,c4,b4),
	HX_("Luminance",d8,17,5b,0a),
	HX_("FloatARGB",c8,f8,67,95),
	HX_("FloatRGBA",30,3c,9c,a0),
	HX_("FloatRGB",f1,d6,3f,b7),
	HX_("FloatLuminanceAlpha",e2,e6,a3,b9),
	HX_("FloatRed",35,f1,3f,b7),
	HX_("FloatGreen",a7,e7,36,af),
	HX_("FloatBlue",36,12,25,96),
	HX_("FloatAlpha",42,80,e0,36),
	HX_("FloatLuminance",dc,52,fa,2a),
	HX_("random",03,22,8f,b7),
	HX_("randomize",31,d9,5d,a7),
	HX_("BLACK",9f,0d,e0,32),
	HX_("WHITE",89,82,ab,47),
	HX_("RED",31,75,3e,00),
	HX_("RED1",e0,15,68,36),
	HX_("RED2",e1,15,68,36),
	HX_("RED3",e2,15,68,36),
	HX_("GREEN",a3,46,db,17),
	HX_("GREEN1",2e,88,02,c8),
	HX_("GREEN2",2f,88,02,c8),
	HX_("GREEN3",30,88,02,c8),
	HX_("BLUE",9a,0a,da,2b),
	HX_("BLUE1",57,3c,ef,32),
	HX_("BLUE2",58,3c,ef,32),
	HX_("BLUE3",59,3c,ef,32),
	HX_("YELLOW",74,4b,df,82),
	HX_("MAGENTA",09,8e,71,8e),
	HX_("CYAN",23,0d,8d,2c),
	HX_("GREY1",f2,57,db,17),
	HX_("GREY2",f3,57,db,17),
	HX_("GREY3",f4,57,db,17),
	HX_("GREY4",f5,57,db,17),
	HX_("GREY5",f6,57,db,17),
	HX_("GREY6",f7,57,db,17),
	HX_("GREY7",f8,57,db,17),
	HX_("GOLD",a0,5a,2a,2f),
	HX_("ORANGE",ee,5e,3f,f8),
	HX_("LIME",15,df,73,32),
	::String(null())
};

void Color_Impl__obj::__register()
{
	Color_Impl__obj _hx_dummy;
	Color_Impl__obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("stuff._Color.Color_Impl_",73,38,65,7d);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Color_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Color_Impl__obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(Color_Impl__obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< Color_Impl__obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Color_Impl__obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Color_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Color_Impl__obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Color_Impl__obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_426_boot)
HXDLIN( 426)		BLACK = 255;
            	}
{
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_427_boot)
HXDLIN( 427)		WHITE = -1;
            	}
{
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_429_boot)
HXDLIN( 429)		RED = -16776961;
            	}
{
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_430_boot)
HXDLIN( 430)		RED1 = (int)1056964863;
            	}
{
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_431_boot)
HXDLIN( 431)		RED2 = (int)2130706687;
            	}
{
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_432_boot)
HXDLIN( 432)		RED3 = (int)-1090518785;
            	}
{
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_434_boot)
HXDLIN( 434)		GREEN = 16711935;
            	}
{
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_435_boot)
HXDLIN( 435)		GREEN1 = 4129023;
            	}
{
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_436_boot)
HXDLIN( 436)		GREEN2 = 8323327;
            	}
{
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_437_boot)
HXDLIN( 437)		GREEN3 = 12517631;
            	}
{
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_439_boot)
HXDLIN( 439)		BLUE = 65535;
            	}
{
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_440_boot)
HXDLIN( 440)		BLUE1 = 16383;
            	}
{
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_441_boot)
HXDLIN( 441)		BLUE2 = 32767;
            	}
{
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_442_boot)
HXDLIN( 442)		BLUE3 = 49151;
            	}
{
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_444_boot)
HXDLIN( 444)		YELLOW = -65281;
            	}
{
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_445_boot)
HXDLIN( 445)		MAGENTA = -16711681;
            	}
{
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_446_boot)
HXDLIN( 446)		CYAN = 16777215;
            	}
{
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_448_boot)
HXDLIN( 448)		GREY1 = 572662527;
            	}
{
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_449_boot)
HXDLIN( 449)		GREY2 = (int)1145324799;
            	}
{
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_450_boot)
HXDLIN( 450)		GREY3 = (int)1717987071;
            	}
{
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_451_boot)
HXDLIN( 451)		GREY4 = (int)-2004317953;
            	}
{
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_452_boot)
HXDLIN( 452)		GREY5 = (int)-1431655681;
            	}
{
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_453_boot)
HXDLIN( 453)		GREY6 = -858993409;
            	}
{
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_454_boot)
HXDLIN( 454)		GREY7 = -286331137;
            	}
{
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_456_boot)
HXDLIN( 456)		GOLD = -2686721;
            	}
{
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_457_boot)
HXDLIN( 457)		ORANGE = -5963521;
            	}
{
            	HX_STACKFRAME(&_hx_pos_618633dea247b5a7_458_boot)
HXDLIN( 458)		LIME = -855703297;
            	}
}

} // end namespace stuff
} // end namespace _Color
