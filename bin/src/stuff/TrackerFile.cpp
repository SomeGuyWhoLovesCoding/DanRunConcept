// Generated by Haxe 4.3.7
#include <hxcpp.h>

#ifndef INCLUDED_38344beec7696400
#define INCLUDED_38344beec7696400
#include "cpp/Int64.h"
#endif
#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_haxe_io_Output
#include <haxe/io/Output.h>
#endif
#ifndef INCLUDED_stuff_CookingPanElement
#include <stuff/CookingPanElement.h>
#endif
#ifndef INCLUDED_stuff_CookingPanRGB
#include <stuff/CookingPanRGB.h>
#endif
#ifndef INCLUDED_stuff_DanRunElement
#include <stuff/DanRunElement.h>
#endif
#ifndef INCLUDED_stuff_Element
#include <stuff/Element.h>
#endif
#ifndef INCLUDED_stuff_EnemyElement
#include <stuff/EnemyElement.h>
#endif
#ifndef INCLUDED_stuff_TrackerFile
#include <stuff/TrackerFile.h>
#endif
#ifndef INCLUDED_stuff_UtilShit
#include <stuff/UtilShit.h>
#endif
#ifndef INCLUDED_sys_io_File
#include <sys/io/File.h>
#endif
#ifndef INCLUDED_sys_io_FileOutput
#include <sys/io/FileOutput.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_78bfdde9ce63a111_8_init,"stuff.TrackerFile","init",0x13875244,"stuff.TrackerFile.init","stuff/TrackerFile.hx",8,0x22d41d05)
HX_LOCAL_STACK_FRAME(_hx_pos_78bfdde9ce63a111_15_putTime,"stuff.TrackerFile","putTime",0x2b71cfc8,"stuff.TrackerFile.putTime","stuff/TrackerFile.hx",15,0x22d41d05)
HX_LOCAL_STACK_FRAME(_hx_pos_78bfdde9ce63a111_22_close,"stuff.TrackerFile","close",0x8d2b4e04,"stuff.TrackerFile.close","stuff/TrackerFile.hx",22,0x22d41d05)
HX_LOCAL_STACK_FRAME(_hx_pos_78bfdde9ce63a111_25_addEnemyElement,"stuff.TrackerFile","addEnemyElement",0x9c801661,"stuff.TrackerFile.addEnemyElement","stuff/TrackerFile.hx",25,0x22d41d05)
HX_LOCAL_STACK_FRAME(_hx_pos_78bfdde9ce63a111_38_addPanElement,"stuff.TrackerFile","addPanElement",0xb842c6ac,"stuff.TrackerFile.addPanElement","stuff/TrackerFile.hx",38,0x22d41d05)
HX_LOCAL_STACK_FRAME(_hx_pos_78bfdde9ce63a111_49_forfeitElement,"stuff.TrackerFile","forfeitElement",0x3de6b8bd,"stuff.TrackerFile.forfeitElement","stuff/TrackerFile.hx",49,0x22d41d05)
namespace stuff{

void TrackerFile_obj::__construct() { }

Dynamic TrackerFile_obj::__CreateEmpty() { return new TrackerFile_obj; }

void *TrackerFile_obj::_hx_vtable = 0;

Dynamic TrackerFile_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< TrackerFile_obj > _hx_result = new TrackerFile_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool TrackerFile_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x2658f6c0;
}

 ::sys::io::FileOutput TrackerFile_obj::file;

 ::haxe::io::Bytes TrackerFile_obj::enemyBuffer;

void TrackerFile_obj::init(){
            	HX_STACKFRAME(&_hx_pos_78bfdde9ce63a111_8_init)
HXLINE(   9)		::stuff::TrackerFile_obj::file = ::sys::io::File_obj::write(((HX_("tracked_",75,d5,ba,7f) + ( (::String)(::stuff::UtilShit_obj::time()) )) + HX_(".bin",59,89,b2,1e)),null());
HXLINE(  10)		::cpp::Int64 time = ::stuff::UtilShit_obj::time();
HXLINE(  11)		 ::sys::io::FileOutput _hx_tmp = ::stuff::TrackerFile_obj::file;
HXDLIN(  11)		_hx_tmp->writeInt32(_hx_int64_low(time));
HXLINE(  12)		 ::sys::io::FileOutput _hx_tmp1 = ::stuff::TrackerFile_obj::file;
HXDLIN(  12)		_hx_tmp1->writeInt32(_hx_int64_high(time));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(TrackerFile_obj,init,(void))

void TrackerFile_obj::putTime(){
            	HX_STACKFRAME(&_hx_pos_78bfdde9ce63a111_15_putTime)
HXLINE(  16)		::cpp::Int64 time = ::stuff::UtilShit_obj::time();
HXLINE(  17)		 ::sys::io::FileOutput _hx_tmp = ::stuff::TrackerFile_obj::file;
HXDLIN(  17)		_hx_tmp->writeInt32(_hx_int64_low(time));
HXLINE(  18)		 ::sys::io::FileOutput _hx_tmp1 = ::stuff::TrackerFile_obj::file;
HXDLIN(  18)		_hx_tmp1->writeInt32(_hx_int64_high(time));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(TrackerFile_obj,putTime,(void))

void TrackerFile_obj::close(){
            	HX_STACKFRAME(&_hx_pos_78bfdde9ce63a111_22_close)
HXDLIN(  22)		::stuff::TrackerFile_obj::file->close();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(TrackerFile_obj,close,(void))

void TrackerFile_obj::addEnemyElement( ::stuff::EnemyElement elem){
            	HX_STACKFRAME(&_hx_pos_78bfdde9ce63a111_25_addEnemyElement)
HXLINE(  26)		::stuff::TrackerFile_obj::enemyBuffer = ::haxe::io::Bytes_obj::alloc(68);
HXLINE(  27)		{
HXLINE(  27)			 ::haxe::io::Bytes _this = ::stuff::TrackerFile_obj::enemyBuffer;
HXDLIN(  27)			::cpp::Int64 v = ( (::cpp::Int64)(_hx_array_unsafe_get(elem->type,1)) );
HXDLIN(  27)			{
HXLINE(  27)				int v1 = _hx_int64_low(v);
HXDLIN(  27)				_this->b[0] = ( (unsigned char)(v1) );
HXDLIN(  27)				_this->b[1] = ( (unsigned char)((v1 >> 8)) );
HXDLIN(  27)				_this->b[2] = ( (unsigned char)((v1 >> 16)) );
HXDLIN(  27)				_this->b[3] = ( (unsigned char)(::hx::UShr(v1,24)) );
            			}
HXDLIN(  27)			{
HXLINE(  27)				int pos = 4;
HXDLIN(  27)				int v2 = _hx_int64_high(v);
HXDLIN(  27)				_this->b[pos] = ( (unsigned char)(v2) );
HXDLIN(  27)				_this->b[(pos + 1)] = ( (unsigned char)((v2 >> 8)) );
HXDLIN(  27)				_this->b[(pos + 2)] = ( (unsigned char)((v2 >> 16)) );
HXDLIN(  27)				_this->b[(pos + 3)] = ( (unsigned char)(::hx::UShr(v2,24)) );
            			}
            		}
HXLINE(  28)		{
HXLINE(  28)			 ::haxe::io::Bytes _this1 = ::stuff::TrackerFile_obj::enemyBuffer;
HXDLIN(  28)			::cpp::Int64 v3 = ( (::cpp::Int64)(_hx_array_unsafe_get(elem->type,0)) );
HXDLIN(  28)			{
HXLINE(  28)				int v4 = _hx_int64_low(v3);
HXDLIN(  28)				_this1->b[8] = ( (unsigned char)(v4) );
HXDLIN(  28)				_this1->b[9] = ( (unsigned char)((v4 >> 8)) );
HXDLIN(  28)				_this1->b[10] = ( (unsigned char)((v4 >> 16)) );
HXDLIN(  28)				_this1->b[11] = ( (unsigned char)(::hx::UShr(v4,24)) );
            			}
HXDLIN(  28)			{
HXLINE(  28)				int pos1 = 12;
HXDLIN(  28)				int v5 = _hx_int64_high(v3);
HXDLIN(  28)				_this1->b[pos1] = ( (unsigned char)(v5) );
HXDLIN(  28)				_this1->b[(pos1 + 1)] = ( (unsigned char)((v5 >> 8)) );
HXDLIN(  28)				_this1->b[(pos1 + 2)] = ( (unsigned char)((v5 >> 16)) );
HXDLIN(  28)				_this1->b[(pos1 + 3)] = ( (unsigned char)(::hx::UShr(v5,24)) );
            			}
            		}
HXLINE(  29)		{
HXLINE(  29)			 ::haxe::io::Bytes _this2 = ::stuff::TrackerFile_obj::enemyBuffer;
HXDLIN(  29)			::cpp::Int64 v6 = ( (::cpp::Int64)(_hx_array_unsafe_get(elem->strengthAcceleration,1)) );
HXDLIN(  29)			{
HXLINE(  29)				int v7 = _hx_int64_low(v6);
HXDLIN(  29)				_this2->b[16] = ( (unsigned char)(v7) );
HXDLIN(  29)				_this2->b[17] = ( (unsigned char)((v7 >> 8)) );
HXDLIN(  29)				_this2->b[18] = ( (unsigned char)((v7 >> 16)) );
HXDLIN(  29)				_this2->b[19] = ( (unsigned char)(::hx::UShr(v7,24)) );
            			}
HXDLIN(  29)			{
HXLINE(  29)				int pos2 = 20;
HXDLIN(  29)				int v8 = _hx_int64_high(v6);
HXDLIN(  29)				_this2->b[pos2] = ( (unsigned char)(v8) );
HXDLIN(  29)				_this2->b[(pos2 + 1)] = ( (unsigned char)((v8 >> 8)) );
HXDLIN(  29)				_this2->b[(pos2 + 2)] = ( (unsigned char)((v8 >> 16)) );
HXDLIN(  29)				_this2->b[(pos2 + 3)] = ( (unsigned char)(::hx::UShr(v8,24)) );
            			}
            		}
HXLINE(  30)		{
HXLINE(  30)			 ::haxe::io::Bytes _this3 = ::stuff::TrackerFile_obj::enemyBuffer;
HXDLIN(  30)			::cpp::Int64 v9 = ( (::cpp::Int64)(_hx_array_unsafe_get(elem->strengthAcceleration,0)) );
HXDLIN(  30)			{
HXLINE(  30)				int v10 = _hx_int64_low(v9);
HXDLIN(  30)				_this3->b[24] = ( (unsigned char)(v10) );
HXDLIN(  30)				_this3->b[25] = ( (unsigned char)((v10 >> 8)) );
HXDLIN(  30)				_this3->b[26] = ( (unsigned char)((v10 >> 16)) );
HXDLIN(  30)				_this3->b[27] = ( (unsigned char)(::hx::UShr(v10,24)) );
            			}
HXDLIN(  30)			{
HXLINE(  30)				int pos3 = 28;
HXDLIN(  30)				int v11 = _hx_int64_high(v9);
HXDLIN(  30)				_this3->b[pos3] = ( (unsigned char)(v11) );
HXDLIN(  30)				_this3->b[(pos3 + 1)] = ( (unsigned char)((v11 >> 8)) );
HXDLIN(  30)				_this3->b[(pos3 + 2)] = ( (unsigned char)((v11 >> 16)) );
HXDLIN(  30)				_this3->b[(pos3 + 3)] = ( (unsigned char)(::hx::UShr(v11,24)) );
            			}
            		}
HXLINE(  31)		{
HXLINE(  31)			 ::haxe::io::Bytes _this4 = ::stuff::TrackerFile_obj::enemyBuffer;
HXDLIN(  31)			::cpp::Int64 v12 = ( (::cpp::Int64)(_hx_array_unsafe_get(elem->speedAcceleration,1)) );
HXDLIN(  31)			{
HXLINE(  31)				int v13 = _hx_int64_low(v12);
HXDLIN(  31)				_this4->b[32] = ( (unsigned char)(v13) );
HXDLIN(  31)				_this4->b[33] = ( (unsigned char)((v13 >> 8)) );
HXDLIN(  31)				_this4->b[34] = ( (unsigned char)((v13 >> 16)) );
HXDLIN(  31)				_this4->b[35] = ( (unsigned char)(::hx::UShr(v13,24)) );
            			}
HXDLIN(  31)			{
HXLINE(  31)				int pos4 = 36;
HXDLIN(  31)				int v14 = _hx_int64_high(v12);
HXDLIN(  31)				_this4->b[pos4] = ( (unsigned char)(v14) );
HXDLIN(  31)				_this4->b[(pos4 + 1)] = ( (unsigned char)((v14 >> 8)) );
HXDLIN(  31)				_this4->b[(pos4 + 2)] = ( (unsigned char)((v14 >> 16)) );
HXDLIN(  31)				_this4->b[(pos4 + 3)] = ( (unsigned char)(::hx::UShr(v14,24)) );
            			}
            		}
HXLINE(  32)		{
HXLINE(  32)			 ::haxe::io::Bytes _this5 = ::stuff::TrackerFile_obj::enemyBuffer;
HXDLIN(  32)			::cpp::Int64 v15 = ( (::cpp::Int64)(_hx_array_unsafe_get(elem->speedAcceleration,0)) );
HXDLIN(  32)			{
HXLINE(  32)				int v16 = _hx_int64_low(v15);
HXDLIN(  32)				_this5->b[40] = ( (unsigned char)(v16) );
HXDLIN(  32)				_this5->b[41] = ( (unsigned char)((v16 >> 8)) );
HXDLIN(  32)				_this5->b[42] = ( (unsigned char)((v16 >> 16)) );
HXDLIN(  32)				_this5->b[43] = ( (unsigned char)(::hx::UShr(v16,24)) );
            			}
HXDLIN(  32)			{
HXLINE(  32)				int pos5 = 44;
HXDLIN(  32)				int v17 = _hx_int64_high(v15);
HXDLIN(  32)				_this5->b[pos5] = ( (unsigned char)(v17) );
HXDLIN(  32)				_this5->b[(pos5 + 1)] = ( (unsigned char)((v17 >> 8)) );
HXDLIN(  32)				_this5->b[(pos5 + 2)] = ( (unsigned char)((v17 >> 16)) );
HXDLIN(  32)				_this5->b[(pos5 + 3)] = ( (unsigned char)(::hx::UShr(v17,24)) );
            			}
            		}
HXLINE(  33)		{
HXLINE(  33)			 ::haxe::io::Bytes _this6 = ::stuff::TrackerFile_obj::enemyBuffer;
HXDLIN(  33)			::cpp::Int64 v18 = ( (::cpp::Int64)(_hx_array_unsafe_get(elem->size,1)) );
HXDLIN(  33)			{
HXLINE(  33)				int v19 = _hx_int64_low(v18);
HXDLIN(  33)				_this6->b[48] = ( (unsigned char)(v19) );
HXDLIN(  33)				_this6->b[49] = ( (unsigned char)((v19 >> 8)) );
HXDLIN(  33)				_this6->b[50] = ( (unsigned char)((v19 >> 16)) );
HXDLIN(  33)				_this6->b[51] = ( (unsigned char)(::hx::UShr(v19,24)) );
            			}
HXDLIN(  33)			{
HXLINE(  33)				int pos6 = 52;
HXDLIN(  33)				int v20 = _hx_int64_high(v18);
HXDLIN(  33)				_this6->b[pos6] = ( (unsigned char)(v20) );
HXDLIN(  33)				_this6->b[(pos6 + 1)] = ( (unsigned char)((v20 >> 8)) );
HXDLIN(  33)				_this6->b[(pos6 + 2)] = ( (unsigned char)((v20 >> 16)) );
HXDLIN(  33)				_this6->b[(pos6 + 3)] = ( (unsigned char)(::hx::UShr(v20,24)) );
            			}
            		}
HXLINE(  34)		{
HXLINE(  34)			 ::haxe::io::Bytes _this7 = ::stuff::TrackerFile_obj::enemyBuffer;
HXDLIN(  34)			::cpp::Int64 v21 = ( (::cpp::Int64)(_hx_array_unsafe_get(elem->size,0)) );
HXDLIN(  34)			{
HXLINE(  34)				int v22 = _hx_int64_low(v21);
HXDLIN(  34)				_this7->b[56] = ( (unsigned char)(v22) );
HXDLIN(  34)				_this7->b[57] = ( (unsigned char)((v22 >> 8)) );
HXDLIN(  34)				_this7->b[58] = ( (unsigned char)((v22 >> 16)) );
HXDLIN(  34)				_this7->b[59] = ( (unsigned char)(::hx::UShr(v22,24)) );
            			}
HXDLIN(  34)			{
HXLINE(  34)				int pos7 = 60;
HXDLIN(  34)				int v23 = _hx_int64_high(v21);
HXDLIN(  34)				_this7->b[pos7] = ( (unsigned char)(v23) );
HXDLIN(  34)				_this7->b[(pos7 + 1)] = ( (unsigned char)((v23 >> 8)) );
HXDLIN(  34)				_this7->b[(pos7 + 2)] = ( (unsigned char)((v23 >> 16)) );
HXDLIN(  34)				_this7->b[(pos7 + 3)] = ( (unsigned char)(::hx::UShr(v23,24)) );
            			}
            		}
HXLINE(  35)		{
HXLINE(  35)			 ::haxe::io::Bytes _this8 = ::stuff::TrackerFile_obj::enemyBuffer;
HXDLIN(  35)			int v24 = elem->placementX;
HXDLIN(  35)			_this8->b[64] = ( (unsigned char)(v24) );
HXDLIN(  35)			_this8->b[65] = ( (unsigned char)((v24 >> 8)) );
HXDLIN(  35)			_this8->b[66] = ( (unsigned char)((v24 >> 16)) );
HXDLIN(  35)			_this8->b[67] = ( (unsigned char)(::hx::UShr(v24,24)) );
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(TrackerFile_obj,addEnemyElement,(void))

void TrackerFile_obj::addPanElement( ::stuff::CookingPanElement elem){
            	HX_STACKFRAME(&_hx_pos_78bfdde9ce63a111_38_addPanElement)
HXLINE(  39)		::stuff::TrackerFile_obj::enemyBuffer = ::haxe::io::Bytes_obj::alloc(33);
HXLINE(  40)		{
HXLINE(  40)			 ::haxe::io::Bytes _this = ::stuff::TrackerFile_obj::enemyBuffer;
HXDLIN(  40)			::cpp::Int64 v = ( (::cpp::Int64)(_hx_array_unsafe_get(elem->type,1)) );
HXDLIN(  40)			{
HXLINE(  40)				int v1 = _hx_int64_low(v);
HXDLIN(  40)				_this->b[0] = ( (unsigned char)(v1) );
HXDLIN(  40)				_this->b[1] = ( (unsigned char)((v1 >> 8)) );
HXDLIN(  40)				_this->b[2] = ( (unsigned char)((v1 >> 16)) );
HXDLIN(  40)				_this->b[3] = ( (unsigned char)(::hx::UShr(v1,24)) );
            			}
HXDLIN(  40)			{
HXLINE(  40)				int pos = 4;
HXDLIN(  40)				int v2 = _hx_int64_high(v);
HXDLIN(  40)				_this->b[pos] = ( (unsigned char)(v2) );
HXDLIN(  40)				_this->b[(pos + 1)] = ( (unsigned char)((v2 >> 8)) );
HXDLIN(  40)				_this->b[(pos + 2)] = ( (unsigned char)((v2 >> 16)) );
HXDLIN(  40)				_this->b[(pos + 3)] = ( (unsigned char)(::hx::UShr(v2,24)) );
            			}
            		}
HXLINE(  41)		{
HXLINE(  41)			 ::haxe::io::Bytes _this1 = ::stuff::TrackerFile_obj::enemyBuffer;
HXDLIN(  41)			::cpp::Int64 v3 = ( (::cpp::Int64)(_hx_array_unsafe_get(elem->type,0)) );
HXDLIN(  41)			{
HXLINE(  41)				int v4 = _hx_int64_low(v3);
HXDLIN(  41)				_this1->b[8] = ( (unsigned char)(v4) );
HXDLIN(  41)				_this1->b[9] = ( (unsigned char)((v4 >> 8)) );
HXDLIN(  41)				_this1->b[10] = ( (unsigned char)((v4 >> 16)) );
HXDLIN(  41)				_this1->b[11] = ( (unsigned char)(::hx::UShr(v4,24)) );
            			}
HXDLIN(  41)			{
HXLINE(  41)				int pos1 = 12;
HXDLIN(  41)				int v5 = _hx_int64_high(v3);
HXDLIN(  41)				_this1->b[pos1] = ( (unsigned char)(v5) );
HXDLIN(  41)				_this1->b[(pos1 + 1)] = ( (unsigned char)((v5 >> 8)) );
HXDLIN(  41)				_this1->b[(pos1 + 2)] = ( (unsigned char)((v5 >> 16)) );
HXDLIN(  41)				_this1->b[(pos1 + 3)] = ( (unsigned char)(::hx::UShr(v5,24)) );
            			}
            		}
HXLINE(  42)		{
HXLINE(  42)			int v6;
HXDLIN(  42)			if (elem->isVanilla) {
HXLINE(  42)				v6 = 0;
            			}
            			else {
HXLINE(  42)				v6 = 1;
            			}
HXDLIN(  42)			::stuff::TrackerFile_obj::enemyBuffer->b[16] = ( (unsigned char)(v6) );
            		}
HXLINE(  43)		{
HXLINE(  43)			 ::haxe::io::Bytes _this2 = ::stuff::TrackerFile_obj::enemyBuffer;
HXDLIN(  43)			int v7 = elem->colorValues->black;
HXDLIN(  43)			_this2->b[17] = ( (unsigned char)(v7) );
HXDLIN(  43)			_this2->b[18] = ( (unsigned char)((v7 >> 8)) );
HXDLIN(  43)			_this2->b[19] = ( (unsigned char)((v7 >> 16)) );
HXDLIN(  43)			_this2->b[20] = ( (unsigned char)(::hx::UShr(v7,24)) );
            		}
HXLINE(  44)		{
HXLINE(  44)			 ::haxe::io::Bytes _this3 = ::stuff::TrackerFile_obj::enemyBuffer;
HXDLIN(  44)			int v8 = elem->colorValues->lime;
HXDLIN(  44)			_this3->b[21] = ( (unsigned char)(v8) );
HXDLIN(  44)			_this3->b[22] = ( (unsigned char)((v8 >> 8)) );
HXDLIN(  44)			_this3->b[23] = ( (unsigned char)((v8 >> 16)) );
HXDLIN(  44)			_this3->b[24] = ( (unsigned char)(::hx::UShr(v8,24)) );
            		}
HXLINE(  45)		{
HXLINE(  45)			 ::haxe::io::Bytes _this4 = ::stuff::TrackerFile_obj::enemyBuffer;
HXDLIN(  45)			int v9 = elem->colorValues->red;
HXDLIN(  45)			_this4->b[25] = ( (unsigned char)(v9) );
HXDLIN(  45)			_this4->b[26] = ( (unsigned char)((v9 >> 8)) );
HXDLIN(  45)			_this4->b[27] = ( (unsigned char)((v9 >> 16)) );
HXDLIN(  45)			_this4->b[28] = ( (unsigned char)(::hx::UShr(v9,24)) );
            		}
HXLINE(  46)		{
HXLINE(  46)			 ::haxe::io::Bytes _this5 = ::stuff::TrackerFile_obj::enemyBuffer;
HXDLIN(  46)			int v10 = elem->placementX;
HXDLIN(  46)			_this5->b[29] = ( (unsigned char)(v10) );
HXDLIN(  46)			_this5->b[30] = ( (unsigned char)((v10 >> 8)) );
HXDLIN(  46)			_this5->b[31] = ( (unsigned char)((v10 >> 16)) );
HXDLIN(  46)			_this5->b[32] = ( (unsigned char)(::hx::UShr(v10,24)) );
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(TrackerFile_obj,addPanElement,(void))

void TrackerFile_obj::forfeitElement(){
            	HX_STACKFRAME(&_hx_pos_78bfdde9ce63a111_49_forfeitElement)
HXLINE(  50)		::stuff::TrackerFile_obj::file->write(::stuff::TrackerFile_obj::enemyBuffer);
HXLINE(  51)		::stuff::TrackerFile_obj::enemyBuffer = null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(TrackerFile_obj,forfeitElement,(void))


TrackerFile_obj::TrackerFile_obj()
{
}

bool TrackerFile_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"file") ) { outValue = ( file ); return true; }
		if (HX_FIELD_EQ(inName,"init") ) { outValue = init_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"close") ) { outValue = close_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"putTime") ) { outValue = putTime_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"enemyBuffer") ) { outValue = ( enemyBuffer ); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"addPanElement") ) { outValue = addPanElement_dyn(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"forfeitElement") ) { outValue = forfeitElement_dyn(); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"addEnemyElement") ) { outValue = addEnemyElement_dyn(); return true; }
	}
	return false;
}

bool TrackerFile_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"file") ) { file=ioValue.Cast<  ::sys::io::FileOutput >(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"enemyBuffer") ) { enemyBuffer=ioValue.Cast<  ::haxe::io::Bytes >(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *TrackerFile_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo TrackerFile_obj_sStaticStorageInfo[] = {
	{::hx::fsObject /*  ::sys::io::FileOutput */ ,(void *) &TrackerFile_obj::file,HX_("file",7c,ce,bb,43)},
	{::hx::fsObject /*  ::haxe::io::Bytes */ ,(void *) &TrackerFile_obj::enemyBuffer,HX_("enemyBuffer",68,29,47,b8)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static void TrackerFile_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(TrackerFile_obj::file,"file");
	HX_MARK_MEMBER_NAME(TrackerFile_obj::enemyBuffer,"enemyBuffer");
};

#ifdef HXCPP_VISIT_ALLOCS
static void TrackerFile_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(TrackerFile_obj::file,"file");
	HX_VISIT_MEMBER_NAME(TrackerFile_obj::enemyBuffer,"enemyBuffer");
};

#endif

::hx::Class TrackerFile_obj::__mClass;

static ::String TrackerFile_obj_sStaticFields[] = {
	HX_("file",7c,ce,bb,43),
	HX_("enemyBuffer",68,29,47,b8),
	HX_("init",10,3b,bb,45),
	HX_("putTime",7c,6e,76,fb),
	HX_("close",b8,17,63,48),
	HX_("addEnemyElement",15,89,10,61),
	HX_("addPanElement",60,64,a9,df),
	HX_("forfeitElement",89,18,4a,90),
	::String(null())
};

void TrackerFile_obj::__register()
{
	TrackerFile_obj _hx_dummy;
	TrackerFile_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("stuff.TrackerFile",ba,95,67,e4);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &TrackerFile_obj::__GetStatic;
	__mClass->mSetStaticField = &TrackerFile_obj::__SetStatic;
	__mClass->mMarkFunc = TrackerFile_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(TrackerFile_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< TrackerFile_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = TrackerFile_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = TrackerFile_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = TrackerFile_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace stuff
