// Generated by Haxe 4.3.7
#include <hxcpp.h>

#ifndef INCLUDED_stuff_Element
#include <stuff/Element.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_74c55ae09bab6af6_4_new,"stuff.Element","new",0x1407dd14,"stuff.Element.new","stuff/Element.hx",4,0xb80fcc1d)
namespace stuff{

void Element_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_74c55ae09bab6af6_4_new)
            	}

Dynamic Element_obj::__CreateEmpty() { return new Element_obj; }

void *Element_obj::_hx_vtable = 0;

Dynamic Element_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Element_obj > _hx_result = new Element_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Element_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x24860ab8;
}


Element_obj::Element_obj()
{
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *Element_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *Element_obj_sStaticStorageInfo = 0;
#endif

::hx::Class Element_obj::__mClass;

void Element_obj::__register()
{
	Element_obj _hx_dummy;
	Element_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("stuff.Element",22,03,6f,ca);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< Element_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Element_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Element_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace stuff
