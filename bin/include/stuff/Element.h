// Generated by Haxe 4.3.7
#ifndef INCLUDED_stuff_Element
#define INCLUDED_stuff_Element

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_74c55ae09bab6af6_4_new)
HX_DECLARE_CLASS1(stuff,Element)

namespace stuff{


class HXCPP_CLASS_ATTRIBUTES Element_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef Element_obj OBJ_;
		Element_obj();

	public:
		enum { _hx_ClassId = 0x24860ab8 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="stuff.Element")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"stuff.Element"); }

		inline static ::hx::ObjectPtr< Element_obj > __new() {
			::hx::ObjectPtr< Element_obj > __this = new Element_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< Element_obj > __alloc(::hx::Ctx *_hx_ctx) {
			Element_obj *__this = (Element_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Element_obj), false, "stuff.Element"));
			*(void **)__this = Element_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_74c55ae09bab6af6_4_new)
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Element_obj();

		HX_DO_RTTI_ALL;
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Element",9c,d6,a5,d3); }

};

} // end namespace stuff

#endif /* INCLUDED_stuff_Element */ 
