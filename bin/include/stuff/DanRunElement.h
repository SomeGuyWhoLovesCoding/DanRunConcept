// Generated by Haxe 4.3.7
#ifndef INCLUDED_stuff_DanRunElement
#define INCLUDED_stuff_DanRunElement

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_stuff_Element
#include <stuff/Element.h>
#endif
HX_DECLARE_STACK_FRAME(_hx_pos_d4f3f2e0b0fd592d_5_new)
HX_DECLARE_CLASS1(stuff,DanRunElement)
HX_DECLARE_CLASS1(stuff,Element)

namespace stuff{


class HXCPP_CLASS_ATTRIBUTES DanRunElement_obj : public  ::stuff::Element_obj
{
	public:
		typedef  ::stuff::Element_obj super;
		typedef DanRunElement_obj OBJ_;
		DanRunElement_obj();

	public:
		enum { _hx_ClassId = 0x09bcbbce };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="stuff.DanRunElement")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"stuff.DanRunElement"); }

		inline static ::hx::ObjectPtr< DanRunElement_obj > __new() {
			::hx::ObjectPtr< DanRunElement_obj > __this = new DanRunElement_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< DanRunElement_obj > __alloc(::hx::Ctx *_hx_ctx) {
			DanRunElement_obj *__this = (DanRunElement_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(DanRunElement_obj), false, "stuff.DanRunElement"));
			*(void **)__this = DanRunElement_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_d4f3f2e0b0fd592d_5_new)
HXDLIN(   5)		__this->super::__construct();
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~DanRunElement_obj();

		HX_DO_RTTI_ALL;
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("DanRunElement",42,38,be,37); }

};

} // end namespace stuff

#endif /* INCLUDED_stuff_DanRunElement */ 
