// Generated by Haxe 4.3.7
#ifndef INCLUDED_stuff_CookingPanRGB
#define INCLUDED_stuff_CookingPanRGB

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_26b66973bb7f9f1b_9_new)
HX_DECLARE_CLASS1(stuff,CookingPanRGB)

namespace stuff{


class HXCPP_CLASS_ATTRIBUTES CookingPanRGB_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef CookingPanRGB_obj OBJ_;
		CookingPanRGB_obj();

	public:
		enum { _hx_ClassId = 0x03a6b602 };

		void __construct(::hx::Null< int >  __o_b,::hx::Null< int >  __o_l,::hx::Null< int >  __o_r);
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="stuff.CookingPanRGB")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"stuff.CookingPanRGB"); }

		inline static ::hx::ObjectPtr< CookingPanRGB_obj > __new(::hx::Null< int >  __o_b,::hx::Null< int >  __o_l,::hx::Null< int >  __o_r) {
			::hx::ObjectPtr< CookingPanRGB_obj > __this = new CookingPanRGB_obj();
			__this->__construct(__o_b,__o_l,__o_r);
			return __this;
		}

		inline static ::hx::ObjectPtr< CookingPanRGB_obj > __alloc(::hx::Ctx *_hx_ctx,::hx::Null< int >  __o_b,::hx::Null< int >  __o_l,::hx::Null< int >  __o_r) {
			CookingPanRGB_obj *__this = (CookingPanRGB_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(CookingPanRGB_obj), false, "stuff.CookingPanRGB"));
			*(void **)__this = CookingPanRGB_obj::_hx_vtable;
{
            		int b = __o_b.Default(858993663);
            		int l = __o_l.Default(-13369345);
            		int r = __o_r.Default(-16776961);
            	HX_STACKFRAME(&_hx_pos_26b66973bb7f9f1b_9_new)
HXLINE(  10)		( ( ::stuff::CookingPanRGB)(__this) )->black = b;
HXLINE(  11)		( ( ::stuff::CookingPanRGB)(__this) )->lime = l;
HXLINE(  12)		( ( ::stuff::CookingPanRGB)(__this) )->red = r;
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~CookingPanRGB_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("CookingPanRGB",4a,f0,24,f6); }

		static  ::stuff::CookingPanRGB Random();
		static ::Dynamic Random_dyn();

		int black;
		int lime;
		int red;
};

} // end namespace stuff

#endif /* INCLUDED_stuff_CookingPanRGB */ 
