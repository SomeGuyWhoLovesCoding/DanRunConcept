// Generated by Haxe 4.3.7
#ifndef INCLUDED_stuff__Color_Color_Impl_
#define INCLUDED_stuff__Color_Color_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(stuff,_Color,Color_Impl_)

namespace stuff{
namespace _Color{


class HXCPP_CLASS_ATTRIBUTES Color_Impl__obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef Color_Impl__obj OBJ_;
		Color_Impl__obj();

	public:
		enum { _hx_ClassId = 0x20facf4f };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="stuff._Color.Color_Impl_")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"stuff._Color.Color_Impl_"); }

		inline static ::hx::ObjectPtr< Color_Impl__obj > __new() {
			::hx::ObjectPtr< Color_Impl__obj > __this = new Color_Impl__obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< Color_Impl__obj > __alloc(::hx::Ctx *_hx_ctx) {
			Color_Impl__obj *__this = (Color_Impl__obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Color_Impl__obj), false, "stuff._Color.Color_Impl_"));
			*(void **)__this = Color_Impl__obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Color_Impl__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Color_Impl_",23,f2,4f,b6); }

		static void __boot();
		static int get_r(int this1);
		static ::Dynamic get_r_dyn();

		static int get_g(int this1);
		static ::Dynamic get_g_dyn();

		static int get_b(int this1);
		static ::Dynamic get_b_dyn();

		static int get_a(int this1);
		static ::Dynamic get_a_dyn();

		static int get_rgb(int this1);
		static ::Dynamic get_rgb_dyn();

		static int get_argb(int this1);
		static ::Dynamic get_argb_dyn();

		static int get_red(int this1);
		static ::Dynamic get_red_dyn();

		static int get_green(int this1);
		static ::Dynamic get_green_dyn();

		static int get_blue(int this1);
		static ::Dynamic get_blue_dyn();

		static int get_alpha(int this1);
		static ::Dynamic get_alpha_dyn();

		static int get_luminance(int this1);
		static ::Dynamic get_luminance_dyn();

		static Float get_rF(int this1);
		static ::Dynamic get_rF_dyn();

		static Float get_gF(int this1);
		static ::Dynamic get_gF_dyn();

		static Float get_bF(int this1);
		static ::Dynamic get_bF_dyn();

		static Float get_aF(int this1);
		static ::Dynamic get_aF_dyn();

		static Float get_redF(int this1);
		static ::Dynamic get_redF_dyn();

		static Float get_greenF(int this1);
		static ::Dynamic get_greenF_dyn();

		static Float get_blueF(int this1);
		static ::Dynamic get_blueF_dyn();

		static Float get_alphaF(int this1);
		static ::Dynamic get_alphaF_dyn();

		static Float get_luminanceF(int this1);
		static ::Dynamic get_luminanceF_dyn();

		static int set_r(int this1,int r);
		static ::Dynamic set_r_dyn();

		static int set_g(int this1,int g);
		static ::Dynamic set_g_dyn();

		static int set_b(int this1,int b);
		static ::Dynamic set_b_dyn();

		static int set_a(int this1,int a);
		static ::Dynamic set_a_dyn();

		static int set_rgb(int this1,int rgb);
		static ::Dynamic set_rgb_dyn();

		static int set_argb(int this1,int argb);
		static ::Dynamic set_argb_dyn();

		static int set_red(int this1,int r);
		static ::Dynamic set_red_dyn();

		static int set_green(int this1,int g);
		static ::Dynamic set_green_dyn();

		static int set_blue(int this1,int b);
		static ::Dynamic set_blue_dyn();

		static int set_alpha(int this1,int a);
		static ::Dynamic set_alpha_dyn();

		static int set_luminance(int this1,int lum);
		static ::Dynamic set_luminance_dyn();

		static Float set_rF(int this1,Float r);
		static ::Dynamic set_rF_dyn();

		static Float set_gF(int this1,Float g);
		static ::Dynamic set_gF_dyn();

		static Float set_bF(int this1,Float b);
		static ::Dynamic set_bF_dyn();

		static Float set_aF(int this1,Float a);
		static ::Dynamic set_aF_dyn();

		static Float set_redF(int this1,Float r);
		static ::Dynamic set_redF_dyn();

		static Float set_greenF(int this1,Float g);
		static ::Dynamic set_greenF_dyn();

		static Float set_blueF(int this1,Float b);
		static ::Dynamic set_blueF_dyn();

		static Float set_alphaF(int this1,Float a);
		static ::Dynamic set_alphaF_dyn();

		static Float set_luminanceF(int this1,Float lum);
		static ::Dynamic set_luminanceF_dyn();

		static int setARGB(int this1,int a,int r,int g,int b);
		static ::Dynamic setARGB_dyn();

		static int setRGBA(int this1,int r,int g,int b,int a);
		static ::Dynamic setRGBA_dyn();

		static int setRGB(int this1,int r,int g,int b);
		static ::Dynamic setRGB_dyn();

		static int setLuminanceAlpha(int this1,int lum,int a);
		static ::Dynamic setLuminanceAlpha_dyn();

		static int setRed(int this1,int r);
		static ::Dynamic setRed_dyn();

		static int setGreen(int this1,int g);
		static ::Dynamic setGreen_dyn();

		static int setBlue(int this1,int b);
		static ::Dynamic setBlue_dyn();

		static int setAlpha(int this1,int a);
		static ::Dynamic setAlpha_dyn();

		static int setLuminance(int this1,int lum);
		static ::Dynamic setLuminance_dyn();

		static int setFloatARGB(int this1,Float a,Float r,Float g,Float b);
		static ::Dynamic setFloatARGB_dyn();

		static int setFloatRGBA(int this1,Float r,Float g,Float b,Float a);
		static ::Dynamic setFloatRGBA_dyn();

		static int setFloatRGB(int this1,Float r,Float g,Float b);
		static ::Dynamic setFloatRGB_dyn();

		static int setFloatLuminanceAlpha(int this1,Float lum,Float a);
		static ::Dynamic setFloatLuminanceAlpha_dyn();

		static int setFloatRed(int this1,Float r);
		static ::Dynamic setFloatRed_dyn();

		static int setFloatGreen(int this1,Float g);
		static ::Dynamic setFloatGreen_dyn();

		static int setFloatBlue(int this1,Float b);
		static ::Dynamic setFloatBlue_dyn();

		static int setFloatAlpha(int this1,Float a);
		static ::Dynamic setFloatAlpha_dyn();

		static int setFloatLuminance(int this1,Float lum);
		static ::Dynamic setFloatLuminance_dyn();

		static int ARGB(int a,int r,int g,int b);
		static ::Dynamic ARGB_dyn();

		static int RGBA(int r,int g,int b,int a);
		static ::Dynamic RGBA_dyn();

		static int RGB(int r,int g,int b);
		static ::Dynamic RGB_dyn();

		static int RG(int r,int g);
		static ::Dynamic RG_dyn();

		static int LuminanceAlpha(int lum,int a);
		static ::Dynamic LuminanceAlpha_dyn();

		static int Red(int r);
		static ::Dynamic Red_dyn();

		static int Green(int g);
		static ::Dynamic Green_dyn();

		static int Blue(int b);
		static ::Dynamic Blue_dyn();

		static int Alpha(int a);
		static ::Dynamic Alpha_dyn();

		static int Luminance(int lum);
		static ::Dynamic Luminance_dyn();

		static int FloatARGB(Float a,Float r,Float g,Float b);
		static ::Dynamic FloatARGB_dyn();

		static int FloatRGBA(Float r,Float g,Float b,Float a);
		static ::Dynamic FloatRGBA_dyn();

		static int FloatRGB(Float r,Float g,Float b);
		static ::Dynamic FloatRGB_dyn();

		static int FloatLuminanceAlpha(Float lum,Float a);
		static ::Dynamic FloatLuminanceAlpha_dyn();

		static int FloatRed(Float r);
		static ::Dynamic FloatRed_dyn();

		static int FloatGreen(Float g);
		static ::Dynamic FloatGreen_dyn();

		static int FloatBlue(Float b);
		static ::Dynamic FloatBlue_dyn();

		static int FloatAlpha(Float a);
		static ::Dynamic FloatAlpha_dyn();

		static int FloatLuminance(Float lum);
		static ::Dynamic FloatLuminance_dyn();

		static int random( ::Dynamic alpha);
		static ::Dynamic random_dyn();

		static void randomize(int this1, ::Dynamic alpha);
		static ::Dynamic randomize_dyn();

		static int BLACK;
		static int WHITE;
		static int RED;
		static int RED1;
		static int RED2;
		static int RED3;
		static int GREEN;
		static int GREEN1;
		static int GREEN2;
		static int GREEN3;
		static int BLUE;
		static int BLUE1;
		static int BLUE2;
		static int BLUE3;
		static int YELLOW;
		static int MAGENTA;
		static int CYAN;
		static int GREY1;
		static int GREY2;
		static int GREY3;
		static int GREY4;
		static int GREY5;
		static int GREY6;
		static int GREY7;
		static int GOLD;
		static int ORANGE;
		static int LIME;
};

} // end namespace stuff
} // end namespace _Color

#endif /* INCLUDED_stuff__Color_Color_Impl_ */ 
